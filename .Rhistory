BC2_COUNTS <- read.table('/home/francesco.massaini/Desktop/IMMUCAN/BC2/BC2_COUNTS.txt', header = TRUE,  sep = '	', row.names = 1)
entrz <- AnnotationDbi::select(org.Hs.eg.db, keys = rownames(BC2_COUNTS), columns = "SYMBOL", keytype = "ENSEMBL")
library(org.Hs.eg.db)
entrz <- AnnotationDbi::select(org.Hs.eg.db, keys = rownames(BC2_COUNTS), columns = "SYMBOL", keytype = "ENSEMBL")
counts <- BC2_COUNTS %>%
data.frame() %>%
mutate(ENSEMBL = rownames(counts)) %>%
inner_join(., entrz, by="ENSEMBL") %>%
dplyr::filter(!is.na(SYMBOL)) %>%
distinct(SYMBOL, .keep_all = T) %>%
column_to_rownames("SYMBOL") %>%
select(-ENSEMBL)
library(dplyr)
counts <- BC2_COUNTS %>%
data.frame() %>%
mutate(ENSEMBL = rownames(counts)) %>%
inner_join(., entrz, by="ENSEMBL") %>%
dplyr::filter(!is.na(SYMBOL)) %>%
distinct(SYMBOL, .keep_all = T) %>%
column_to_rownames("SYMBOL") %>%
select(-ENSEMBL)
library(tibble)
library(org.Hs.eg.db)
library(dplyr)
library(tibble)
entrz <- AnnotationDbi::select(org.Hs.eg.db, keys = rownames(BC2_COUNTS), columns = "SYMBOL", keytype = "ENSEMBL")
counts <- BC2_COUNTS %>%
data.frame() %>%
mutate(ENSEMBL = rownames(counts)) %>%
inner_join(., entrz, by="ENSEMBL") %>%
dplyr::filter(!is.na(SYMBOL)) %>%
distinct(SYMBOL, .keep_all = T) %>%
column_to_rownames("SYMBOL")
counts <- BC2_COUNTS %>%
data.frame() %>%
mutate(ENSEMBL = rownames(counts)) %>%
inner_join(., entrz, by="ENSEMBL") %>%
dplyr::filter(!is.na(SYMBOL)) %>%
distinct(SYMBOL, .keep_all = T) %>%
column_to_rownames("SYMBOL")
counts <- BC2_COUNTS %>%
mutate(ENSEMBL = rownames(counts)) %>%
inner_join(., entrz, by="ENSEMBL") %>%
dplyr::filter(!is.na(SYMBOL)) %>%
distinct(SYMBOL, .keep_all = T) %>%
column_to_rownames("SYMBOL")
View(entrz)
counts <- BC2_COUNTS %>%
mutate(ENSEMBL = rownames(BC2_COUNTS)) %>%
inner_join(., entrz, by="ENSEMBL") %>%
dplyr::filter(!is.na(SYMBOL)) %>%
distinct(SYMBOL, .keep_all = T) %>%
column_to_rownames("SYMBOL")
counts$ENSEMBL = NULL
library(ADImpute)
x = ADImpute::NormalizeTPM(counts, log = T)
sampleDists <- dist(t(counts)) #DO NOT DO IT FOR GENES
sampleDistMatrix <- as.matrix(sampleDists)
library(RColorBrewer)
sampleDistMatrix <- as.matrix(sampleDists)
colors <- colorRampPalette( rev(brewer.pal(9, "Blues")) )(255)
library(pheatmap)
sampleDistMatrix <- as.matrix(sampleDists)
colors <- colorRampPalette( rev(brewer.pal(9, "Blues")) )(255)
pheatmap(sampleDistMatrix,
clustering_distance_rows=sampleDists,
clustering_distance_cols=sampleDists,
col=colors)
sampleTree = hclust(dist(t(counts)), method = "average");
plot(sampleTree, main = "Sample clustering to detect outliers", sub="", xlab="", cex.lab = 1.5, cex.axis = 1.5, cex.main = 2)
plot(sampleTree, main = "Sample clustering to detect outliers", sub="", xlab="", cex.lab = 1.5, cex.axis = 1.5, cex.main = 2)
colum(org.Hs.eg.db)
column(org.Hs.eg.db)
columns(org.Hs.eg.db)
