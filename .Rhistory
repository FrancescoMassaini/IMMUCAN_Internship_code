str(custom_BC2_cohort_samples)
custom_BC2_cohort_samples <- read.table("/home/francesco.massaini/Desktop/IMMUCAN_data/BC2/Patient_to_include_from_rna_samples_bc2_to_create_custom_cohort.tsv", header = TRUE,  sep = '	', row.names = NULL)
custom_BC2_cohort_samples_2 <- setdiff(custom_BC2_cohort_samples[1],unique(custom_BC2_cohort_samples[1])) %>%
custom_BC2_cohort_samples <- read.table("/home/francesco.massaini/Desktop/IMMUCAN_data/BC2/Patient_to_include_from_rna_samples_bc2_to_create_custom_cohort.tsv", header = TRUE,  sep = '	', row.names = NULL)
library(tidyverse)
library(tibble)
library(org.Hs.eg.db) # Homo sapiens db
library(ADImpute) # to normalize with gene lenght
library(RColorBrewer) # for plot
library(pheatmap) # for heatmaps
library(ADImpute)
library(BiocGenerics)
library(stringr)
all <- read.table("/home/francesco.massaini/Desktop/BC-20032024_tpm.txt", header = TRUE,  sep = '	', row.names = 1)
custom_BC2_cohort_samples <- read.table("/home/francesco.massaini/Desktop/IMMUCAN_data/BC2/Patient_to_include_from_rna_samples_bc2_to_create_custom_cohort.tsv", header = TRUE,  sep = '	', row.names = NULL)
custom_BC2_cohort_samples_2 <- setdiff(custom_BC2_cohort_samples[1],unique(custom_BC2_cohort_samples[1]))
custom_BC2_cohort_samples_2 <- custom_BC2_cohort_samples[1]
custom_BC2_cohort_samples_2 <- custom_BC2_cohort_samples$sample
str(custom_BC2_cohort_samples_2)
custom_BC2_cohort_samples <- read.table("/home/francesco.massaini/Desktop/IMMUCAN_data/BC2/Patient_to_include_from_rna_samples_bc2_to_create_custom_cohort.tsv", header = TRUE,  sep = '	', row.names = NULL)
custom_BC2_cohort_samples_2 <- setdiff(custom_BC2_cohort_samples[1],unique(custom_BC2_cohort_samples[1]))
View(custom_BC2_cohort_samples)
View(custom_BC2_cohort_samples_2)
library(tidyverse)
library(tibble)
library(org.Hs.eg.db) # Homo sapiens db
library(ADImpute) # to normalize with gene lenght
library(RColorBrewer) # for plot
library(pheatmap) # for heatmaps
library(ADImpute)
library(BiocGenerics)
library(stringr)
all <- read.table("/home/francesco.massaini/Desktop/BC-20032024_tpm.txt", header = TRUE,  sep = '	', row.names = 1)
custom_BC2_samples <- read.table("/home/francesco.massaini/Desktop/IMMUCAN_data/BC2/Patient_to_include_from_rna_samples_bc2_to_create_custom_cohort.tsv", header = TRUE,  sep = '	', row.names = NULL)
custom_BC2_samples_unique <- setdiff(custom_BC2_samples[1],unique(custom_BC2_samples[1])) %>%
custom_BC2_samples_unique$sample
custom_BC2_samples <- read.table("/home/francesco.massaini/Desktop/IMMUCAN_data/BC2/Patient_to_include_from_rna_samples_bc2_to_create_custom_cohort.tsv", header = TRUE,  sep = '	', row.names = NULL)
custom_BC2_samples_unique <- setdiff(custom_BC2_samples[1],unique(custom_BC2_samples[1])) %>%
custom_BC2_samples_unique$
custom_BC2_samples_unique <- unique(custom_BC2_samples[1]) %>%
custom_BC2_samples_unique$sample
custom_BC2_samples <- read.table("/home/francesco.massaini/Desktop/IMMUCAN_data/BC2/Patient_to_include_from_rna_samples_bc2_to_create_custom_cohort.tsv", header = TRUE,  sep = '	', row.names = NULL)
custom_BC2_samples_unique <- unique(custom_BC2_samples[1]) %>%
select(1)
str(unique(custom_BC2_samples[1]))
custom_BC2_samples <- read.table("/home/francesco.massaini/Desktop/IMMUCAN_data/BC2/Patient_to_include_from_rna_samples_bc2_to_create_custom_cohort.tsv", header = TRUE,  sep = '	', row.names = NULL)
custom_BC2_samples_unique <- unique(custom_BC2_samples[1]) %>%
dplyr::select(1)
str(custom_BC2_samples_unique)
View(custom_BC2_samples_unique)
custom_BC2_samples <- read.table("/home/francesco.massaini/Desktop/IMMUCAN_data/BC2/Patient_to_include_from_rna_samples_bc2_to_create_custom_cohort.tsv", header = TRUE,  sep = '	', row.names = NULL)
custom_BC2_samples_unique <- unique(custom_BC2_samples[1]) %>%
str_replace_all("-",".")
custom_BC2_samples_unique <- unique(custom_BC2_samples[1]) %>%
mutate_at("sample", str_replace_all, "-",".")
View(custom_BC2_samples_unique)
custom_BC2_samples <- read.table("/home/francesco.massaini/Desktop/IMMUCAN_data/BC2/Patient_to_include_from_rna_samples_bc2_to_create_custom_cohort.tsv", header = TRUE,  sep = '	', row.names = NULL)
custom_BC2_samples_unique <- unique(custom_BC2_samples[1]) %>%
mutate_at("sample", str_replace_all, "-",".") %>%
mutate_at("sample", paste0("RNA.01"))
custom_BC2_samples <- read.table("/home/francesco.massaini/Desktop/IMMUCAN_data/BC2/Patient_to_include_from_rna_samples_bc2_to_create_custom_cohort.tsv", header = TRUE,  sep = '	', row.names = NULL)
custom_BC2_samples_unique <- unique(custom_BC2_samples[1]) %>%
mutate_at("sample", str_replace_all, "-",".") %>%
mutate_at("sample", paste0(.,"RNA.01"))
custom_BC2_samples_unique <- unique(custom_BC2_samples[1]) %>%
mutate_at("sample", str_replace_all, "-",".") %>%
mutate_at("sample", ~paste0(.,"RNA.01"))
View(custom_BC2_samples_unique)
custom_BC2_samples_unique <- unique(custom_BC2_samples[1]) %>%
mutate_at("sample", str_replace_all, "-",".") %>%
mutate_at("sample", ~paste0(.,".RNA.01"))
# BC2 needs to be filtered with custom patients
BC2_samples <- grep(pattern = "BC2", colnames(all), value = T) %>%
intersect(., custom_BC2_cohort_samples)
grep(pattern = "BC2", colnames(all), value = T)
# BC2 needs to be filtered with custom patients
BC2_samples <- grep(pattern = "BC2", colnames(all), value = T) %>%
intersect(., custom_BC2_samples_unique)
custom_BC2_samples_unique
custom_BC2_samples_unique <- unique(custom_BC2_samples[1]) %>%
mutate_at("sample", str_replace_all, "-",".") %>%
mutate_at("sample", ~paste0(.,".RNA.01")) %>%
as.vector()
View(custom_BC2_samples_unique)
as.vector(custom_BC2_samples_unique)
as.vector(as.factor(custom_BC2_samples_unique))
custom_BC2_samples_unique <- unique(custom_BC2_samples$sample) %>%
mutate_at("sample", str_replace_all, "-",".") %>%
mutate_at("sample", ~paste0(.,".RNA.01"))
custom_BC2_samples_unique <- unique(custom_BC2_samples$sample) %>%
str_replace_all("-",".") %>%
paste0(.,".RNA.01")
custom_BC2_samples_unique
# BC2 needs to be filtered with custom patients
BC2_samples <- grep(pattern = "BC2", colnames(all), value = T) %>%
intersect(., custom_BC2_samples_unique)
BC2 <- all[BC2_samples]
View(BC2)
library(tidyverse)
library(dplyr)
library(BiocGenerics)
library(stringr)
all_BCs_BCs <- read.table("/home/francesco.massaini/Desktop/BC-20032024_tpm.txt", header = TRUE,  sep = '	', row.names = 1)
BC1_samples <- grep(pattern = "BC1", colnames(all_BCs), value = T)
library(tidyverse)
library(dplyr)
library(BiocGenerics)
library(stringr)
all_BCs <- read.table("/home/francesco.massaini/Desktop/BC-20032024_tpm.txt", header = TRUE,  sep = '	', row.names = 1)
BC1_samples <- grep(pattern = "BC1", colnames(all_BCs), value = T)
BC3_samples <- grep(pattern = "BC3", colnames(all_BCs), value = T)
# BC2 needs to be filtered with custom patients (specified in Patient_to_include_from_rna_samples_bc2_to_create_custom_cohort.tsv)
custom_BC2_samples <- read.table("/home/francesco.massaini/Desktop/IMMUCAN_data/BC2/Patient_to_include_from_rna_samples_bc2_to_create_custom_cohort.tsv", header = TRUE,  sep = '	', row.names = NULL)
custom_BC2_samples_unique <- unique(custom_BC2_samples$sample) %>% # Remove duplicates
str_replace_all_BCs("-",".") %>%
paste0(.,".RNA.01") # Replace and use the same samples name pattern of all_BCs
library(tidyverse)
library(dplyr)
library(BiocGenerics)
library(stringr)
all_BCs <- read.table("/home/francesco.massaini/Desktop/BC-20032024_tpm.txt", header = TRUE,  sep = '	', row.names = 1)
BC1_samples <- grep(pattern = "BC1", colnames(all_BCs), value = T)
BC3_samples <- grep(pattern = "BC3", colnames(all_BCs), value = T)
# BC2 needs to be filtered with custom patients (specified in Patient_to_include_from_rna_samples_bc2_to_create_custom_cohort.tsv)
custom_BC2_samples <- read.table("/home/francesco.massaini/Desktop/IMMUCAN_data/BC2/Patient_to_include_from_rna_samples_bc2_to_create_custom_cohort.tsv", header = TRUE,  sep = '	', row.names = NULL)
custom_BC2_samples_unique <- unique(custom_BC2_samples$sample) %>% # Remove duplicates
str_replace_all("-",".") %>%
paste0(.,".RNA.01") # Replace and use the same samples name pattern of all
BC2_samples <- grep(pattern = "BC2", colnames(all_BCs), value = T) %>%
intersect(., custom_BC2_samples_unique)
# Save distinct files (with filtered BC2)
BC1 <- all_BCs[BC1_samples] %>%
rownames_to_column("Genes")
write.table(BC1, file = "BC1_TPM_Mounim.txt", quote = F, sep = "\t", row.names = F)
BC2 <- all_BCs[BC2_samples] %>%
rownames_to_column("Genes")
write.table(BC2, file = "BC1_TPM_Mounim", quote = F, sep = "\t", row.names = F)
BC3 <- all_BCs[BC3_samples] %>%
rownames_to_column("Genes")
write.table(BC3, file = "BC1_TPM_Mounim.txt", quote = F, sep = "\t", row.names = F)
getwd()
library(tidyverse)
library(dplyr)
library(BiocGenerics)
library(stringr)
all_BCs <- read.table("/home/francesco.massaini/Desktop/BC-20032024_tpm.txt", header = TRUE,  sep = '	', row.names = 1)
BC1_samples <- grep(pattern = "BC1", colnames(all_BCs), value = T)
BC3_samples <- grep(pattern = "BC3", colnames(all_BCs), value = T)
# BC2 needs to be filtered with custom patients (specified in Patient_to_include_from_rna_samples_bc2_to_create_custom_cohort.tsv)
custom_BC2_samples <- read.table("/home/francesco.massaini/Desktop/IMMUCAN_data/BC2/Patient_to_include_from_rna_samples_bc2_to_create_custom_cohort.tsv", header = TRUE,  sep = '	', row.names = NULL)
custom_BC2_samples_unique <- unique(custom_BC2_samples$sample) %>% # Remove duplicates
str_replace_all("-",".") %>%
paste0(.,".RNA.01") # Replace and use the same samples name pattern of all
BC2_samples <- grep(pattern = "BC2", colnames(all_BCs), value = T) %>%
intersect(., custom_BC2_samples_unique)
# Save distinct files (with filtered BC2)
BC1 <- all_BCs[BC1_samples] %>%
rownames_to_column("Genes")
write.table(BC1, file = "BC1_TPM_Mounim.txt", quote = F, sep = "\t", row.names = F)
BC2 <- all_BCs[BC2_samples] %>%
rownames_to_column("Genes")
write.table(BC2, file = "BC2_TPM_Mounim", quote = F, sep = "\t", row.names = F)
BC3 <- all_BCs[BC3_samples] %>%
rownames_to_column("Genes")
write.table(BC3, file = "BC3_TPM_Mounim.txt", quote = F, sep = "\t", row.names = F)
library(tidyverse)
library(dplyr)
library(BiocGenerics)
library(stringr)
all_BCs <- read.table("/home/francesco.massaini/Desktop/BC-20032024_tpm.txt", header = TRUE,  sep = '	', row.names = 1)
BC1_samples <- grep(pattern = "BC1", colnames(all_BCs), value = T)
BC3_samples <- grep(pattern = "BC3", colnames(all_BCs), value = T)
# BC2 needs to be filtered with custom patients (specified in Patient_to_include_from_rna_samples_bc2_to_create_custom_cohort.tsv)
custom_BC2_samples <- read.table("/home/francesco.massaini/Desktop/IMMUCAN_data/BC2/Patient_to_include_from_rna_samples_bc2_to_create_custom_cohort.tsv", header = TRUE,  sep = '	', row.names = NULL)
custom_BC2_samples_unique <- unique(custom_BC2_samples$sample) %>% # Remove duplicates
str_replace_all("-",".") %>%
paste0(.,".RNA.01") # Replace and use the same samples name pattern of all
BC2_samples <- grep(pattern = "BC2", colnames(all_BCs), value = T) %>%
intersect(., custom_BC2_samples_unique)
# Save distinct files (with filtered BC2)
BC1 <- all_BCs[BC1_samples] %>%
rownames_to_column("Genes")
write.table(BC1, file = "BC1_TPM_Mounim.txt", quote = F, sep = "\t", row.names = F)
BC2 <- all_BCs[BC2_samples] %>%
rownames_to_column("Genes")
write.table(BC2, file = "BC2_TPM_Mounim.txt", quote = F, sep = "\t", row.names = F)
BC3 <- all_BCs[BC3_samples] %>%
rownames_to_column("Genes")
write.table(BC3, file = "BC3_TPM_Mounim.txt", quote = F, sep = "\t", row.names = F)
library(tidyverse)
library(dplyr)
library(BiocGenerics)
library(stringr)
all_BCs <- read.table("/home/francesco.massaini/Desktop/IMMUCAN_data/all_BCs_merged_BC-20032024_tpm.txt", header = TRUE,  sep = '	', row.names = 1)
BC1_samples <- grep(pattern = "BC1", colnames(all_BCs), value = T)
BC3_samples <- grep(pattern = "BC3", colnames(all_BCs), value = T)
# BC2 needs to be filtered with custom patients (specified in Patient_to_include_from_rna_samples_bc2_to_create_custom_cohort.tsv)
custom_BC2_samples <- read.table("/home/francesco.massaini/Desktop/IMMUCAN_data/BC2/Patient_to_include_from_rna_samples_bc2_to_create_custom_cohort.tsv", header = TRUE,  sep = '	', row.names = NULL)
custom_BC2_samples_unique <- unique(custom_BC2_samples$sample) %>% # Remove duplicates
str_replace_all("-",".") %>%
paste0(.,".RNA.01") # Replace and use the same samples name pattern of all
BC2_samples <- grep(pattern = "BC2", colnames(all_BCs), value = T) %>%
intersect(., custom_BC2_samples_unique)
# Save distinct files (with filtered BC2)
BC1 <- all_BCs[BC1_samples] %>%
rownames_to_column("Genes")
write.table(BC1, file = "/home/francesco.massaini/Desktop/IMMUCAN_data/BC1/02_TPM/BC1_TPM_Mounim.txt", quote = F, sep = "\t", row.names = F)
BC2 <- all_BCs[BC2_samples] %>%
rownames_to_column("Genes")
write.table(BC2, file = "/home/francesco.massaini/Desktop/IMMUCAN_data/BC2/02_TPM/BC2_TPM_Mounim.txt", quote = F, sep = "\t", row.names = F)
BC3 <- all_BCs[BC3_samples] %>%
rownames_to_column("Genes")
write.table(BC3, file = "/home/francesco.massaini/Desktop/IMMUCAN_data/BC3/02_TPM/BC3_TPM_Mounim.txt", quote = F, sep = "\t", row.names = F)
library(tidyverse)
library(dplyr)
library(BiocGenerics)
library(stringr)
all_BCs <- read.table("/home/francesco.massaini/Desktop/IMMUCAN_data/all_BCs_merged_BC-20032024_tpm.txt", header = TRUE,  sep = '	', row.names = 1)
NSCLC <- read.table("/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC/NSCLC_tpm_Mounim.txt", header = TRUE,  sep = '	', row.names = 1)
BC1_samples <- grep(pattern = "BC1", colnames(all_BCs), value = T)
BC3_samples <- grep(pattern = "BC3", colnames(all_BCs), value = T)
# BC2 needs to be filtered with custom patients (specified in Patient_to_include_from_rna_samples_bc2_to_create_custom_cohort.tsv)
custom_BC2_samples <- read.table("/home/francesco.massaini/Desktop/IMMUCAN_data/BC2/Patient_to_include_from_rna_samples_bc2_to_create_custom_cohort.tsv", header = TRUE,  sep = '	', row.names = NULL)
custom_BC2_samples_unique <- unique(custom_BC2_samples$sample) %>% # Remove duplicates
str_replace_all("-",".") %>%
paste0(.,".RNA.01") # Replace and use the same samples name pattern of all
BC2_samples <- grep(pattern = "BC2", colnames(all_BCs), value = T) %>%
intersect(., custom_BC2_samples_unique)
# Save distinct files (with filtered BC2)
BC1 <- all_BCs[BC1_samples] %>%
rownames_to_column("Genes")
write.table(BC1, file = "/home/francesco.massaini/Desktop/IMMUCAN_data/BC1/02_TPM/BC1_TPM_Mounim.txt", quote = F, sep = "\t", row.names = F)
BC2 <- all_BCs[BC2_samples] %>%
rownames_to_column("Genes")
write.table(BC2, file = "/home/francesco.massaini/Desktop/IMMUCAN_data/BC2/02_TPM/BC2_TPM_Mounim.txt", quote = F, sep = "\t", row.names = F)
BC3 <- all_BCs[BC3_samples] %>%
rownames_to_column("Genes")
write.table(BC3, file = "/home/francesco.massaini/Desktop/IMMUCAN_data/BC3/02_TPM/BC3_TPM_Mounim.txt", quote = F, sep = "\t", row.names = F)
write.table(NSCLC, file = "/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC/02_TPM/NSCLC_TPM_Mounim.txt", quote = F, sep = "\t", row.names = F)
library(tidyverse)
library(dplyr)
library(BiocGenerics)
library(stringr)
all_BCs <- read.table("/home/francesco.massaini/Desktop/IMMUCAN_data/all_BCs_merged_BC-20032024_tpm.txt", header = TRUE,  sep = '	', row.names = 1)
NSCLC <- read.table("/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC/NSCLC_tpm_Mounim.txt", header = TRUE,  sep = '	', row.names = 1) %>%
rownames_to_column("Genes")
BC1_samples <- grep(pattern = "BC1", colnames(all_BCs), value = T)
BC3_samples <- grep(pattern = "BC3", colnames(all_BCs), value = T)
# BC2 needs to be filtered with custom patients (specified in Patient_to_include_from_rna_samples_bc2_to_create_custom_cohort.tsv)
custom_BC2_samples <- read.table("/home/francesco.massaini/Desktop/IMMUCAN_data/BC2/Patient_to_include_from_rna_samples_bc2_to_create_custom_cohort.tsv", header = TRUE,  sep = '	', row.names = NULL)
custom_BC2_samples_unique <- unique(custom_BC2_samples$sample) %>% # Remove duplicates
str_replace_all("-",".") %>%
paste0(.,".RNA.01") # Replace and use the same samples name pattern of all
BC2_samples <- grep(pattern = "BC2", colnames(all_BCs), value = T) %>%
intersect(., custom_BC2_samples_unique)
# Save distinct files (with filtered BC2)
BC1 <- all_BCs[BC1_samples] %>%
rownames_to_column("Genes")
write.table(BC1, file = "/home/francesco.massaini/Desktop/IMMUCAN_data/BC1/02_TPM/BC1_TPM_Mounim.txt", quote = F, sep = "\t", row.names = F)
BC2 <- all_BCs[BC2_samples] %>%
rownames_to_column("Genes")
write.table(BC2, file = "/home/francesco.massaini/Desktop/IMMUCAN_data/BC2/02_TPM/BC2_TPM_Mounim.txt", quote = F, sep = "\t", row.names = F)
BC3 <- all_BCs[BC3_samples] %>%
rownames_to_column("Genes")
write.table(BC3, file = "/home/francesco.massaini/Desktop/IMMUCAN_data/BC3/02_TPM/BC3_TPM_Mounim.txt", quote = F, sep = "\t", row.names = F)
write.table(NSCLC, file = "/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC/02_TPM/NSCLC_TPM_Mounim.txt", quote = F, sep = "\t", row.names = F)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tibble)
library(org.Hs.eg.db) # Homo sapiens db
install.packages("tidyverse")
install.packages("tibble")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("org.Hs.eg.db") # org.Hs.eg.db è un pacchetto Bioconductor
BiocManager::install("DESeq2")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DESeq2")
BiocManager::install("BiocVersion")
library(BiocManager)
library(BiocManager)
remove.packages("BiocVersion", lib="/usr/local/lib/R/site-library")
BiocManager::install("BiocVersion")
BiocManager::install("BiocVersion", version = '3.18')
BiocManager::install("DESeq2")
path <- c("/home/francesco.massaini/Desktop/IMMUCAN_data/BC1/02_TPM/BC1_TPM_Mounim.txt",
"/home/francesco.massaini/Desktop/IMMUCAN_data/BC2/02_TPM/BC2_TPM_Mounim.txt",
"/home/francesco.massaini/Desktop/IMMUCAN_data/BC3/02_TPM/BC3_TPM_Mounim.txt",
"/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC/02_TPM/NSCLC_TPM_Mounim.txt")
files_names <- gsub(".txt$", "", basename(path))
folders_names <- strsplit(files_names, "_")
TPM <- read.table(path[1], header = TRUE,  sep = '	', row.names = 1)
TPM <- TPM[rownames(TPM)%in%rownames(immunedeconv::dataset_racle$expr_mat),]
View(TPM)
# Deleting (not)duplicated file to avoid problems with QuanTIseq
library(tidyverse)
library(dplyr)
path <- c("/home/francesco.massaini/Desktop/IMMUCAN_data/BC1/02_TPM/BC1_TPM_Mounim.txt",
"/home/francesco.massaini/Desktop/IMMUCAN_data/BC2/02_TPM/BC2_TPM_Mounim.txt",
"/home/francesco.massaini/Desktop/IMMUCAN_data/BC3/02_TPM/BC3_TPM_Mounim.txt",
"/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC/02_TPM/NSCLC_TPM_Mounim.txt")
files_names <- gsub(".txt$", "", basename(path))
folders_names <- strsplit(files_names, "_")
for (i in 1:length(path)) {
TPM <- read.table(path[i], header = TRUE,  sep = '	', row.names = 1)
TPM <- TPM[rownames(TPM)%in%rownames(immunedeconv::dataset_racle$expr_mat),] %>%
rownames_to_column("Genes")
write.table(TPM, file = paste0("/home/francesco.massaini/Desktop/IMMUCAN_data/", folders_names[[i]][1], "/02_TPM/", files_names[i],"_genes_filtered.txt"), quote = F, sep = "\t", row.names = F)
}
library(ggplot2)
library(stringr)
plot_bymethod <- function(method, result_file) {
final_df = data.frame()
for (i in 1:nrow(method)) {
test = data.frame("Samples" = rownames(method)[i],
"Cells" = colnames(method),
"Prop" = as.vector(t(method[i,])))
final_df = rbind(final_df,test)
}
plot = ggplot(final_df) +
ggtitle(result_file) +
geom_bar(aes(x=Samples, y = Prop, fill= Cells), stat = "identity") + #specify only the NAMES of columns. Data are collected from ggplot(final_df)
# By default, the axes are aligned at the center of the text, even when rotated. When you rotate +/- 90 degrees, you usually want it to be aligned at the edge instead:
# vjust = 0.5 allinea il testo a meta della linea in cui deve stare il label dal punto di vista verticale
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
print(plot)
}
# row.names = 1 specify that the first column is the rownames
path <- "/home/francesco.massaini/Desktop/IMMUCAN_data/BC2/02_TPM/BC2_TPM_Mounim_genes_filtered.txt"
path2<- "/home/francesco.massaini/Desktop/IMMUCAN_data/BC2/02_TPM/BC2_TPM_Mounim_genes_filtered_half_patients.txt"
data <- read.table(path, header = TRUE, sep = "\t", row.names = 1)
data2 <- read.table(path2, header = TRUE, sep = "\t", row.names = 1)
result_file <- str_extract(path,"_.*?$")
# head(data)
# View(data[,grep("^Quantiseq.*", colnames(data))]) to visualize data
# Quantiseq <- data[,grep("^Quantiseq.*", colnames(data))]
methods.signatures <- read.table("/home/francesco.massaini/Desktop/methods.txt", header = FALSE, sep = "\t")
library(ggplot2)
library(stringr)
plot_bymethod <- function(method, result_file) {
final_df = data.frame()
for (i in 1:nrow(method)) {
test = data.frame("Samples" = rownames(method)[i],
"Cells" = colnames(method),
"Prop" = as.vector(t(method[i,])))
final_df = rbind(final_df,test)
}
plot = ggplot(final_df) +
ggtitle(result_file) +
geom_bar(aes(x=Samples, y = Prop, fill= Cells), stat = "identity") + #specify only the NAMES of columns. Data are collected from ggplot(final_df)
# By default, the axes are aligned at the center of the text, even when rotated. When you rotate +/- 90 degrees, you usually want it to be aligned at the edge instead:
# vjust = 0.5 allinea il testo a meta della linea in cui deve stare il label dal punto di vista verticale
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
print(plot)
}
# row.names = 1 specify that the first column is the rownames
path <- "/home/francesco.massaini/Desktop/IMMUCAN_data/BC2/02_TPM/BC2_TPM_Mounim_genes_filtered.txt"
path2<- "/home/francesco.massaini/Desktop/IMMUCAN_data/BC2/02_TPM/BC2_TPM_Mounim_genes_filtered_half_patients.txt"
data <- read.table(path, header = TRUE, sep = "\t", row.names = 1)
data2 <- read.table(path2, header = TRUE, sep = "\t", row.names = 1)
result_file <- str_extract(path,"_.*?$")
# head(data)
# View(data[,grep("^Quantiseq.*", colnames(data))]) to visualize data
# Quantiseq <- data[,grep("^Quantiseq.*", colnames(data))]
methods.signatures <- read.table("/home/francesco.massaini/Desktop/methods.txt", header = FALSE, sep = "\t")
list_of_methods <- methods.signatures[,1]
fixedmet <- c(1,2,3)
list_of_methods <- list_of_methods[-fixedmet]
empty_pos <-  which(list_of_methods == "", arr.ind = TRUE)
list_of_methods <- list_of_methods[-empty_pos]
list_of_signature <- methods.signatures[,2]
all_ms <- list("Quantiseq","XCell","MCP")
for (i in list_of_methods) {
# print(paste("i", i))
for (j in list_of_signature){
# print(paste("j", j))
tmp <- paste(i,j, sep = "_")
# append(all_ms, tmp) doesn't work
all_ms <- c(all_ms, tmp)
# print(paste("tmp", tmp))
}
}
for (i in all_ms) {
print(i)
methods <- data[,grep(i, colnames(data))]
# plot_bymethod(methods, result_file)
methods2 <- data2[,grep(i, colnames(data))]
identical(methods, methods2)
}
all_ms
methods <- data[,grep(all_ms[1], colnames(data))]
str(methods)
all_ms[1]
data
View(methods)
View(data)
data[,grep(all_ms[1], colnames(data))]
all_ms[1]
path <- "/home/francesco.massaini/Desktop/IMMUCAN_data/BC2/02_TPM/BC2_TPM_Mounim_genes_filtered.txt"
path2<- "/home/francesco.massaini/Desktop/IMMUCAN_data/BC2/02_TPM/BC2_TPM_Mounim_genes_filtered_half_patients.txt"
data <- read.table(path, header = TRUE, sep = "\t", row.names = 1)
data2 <- read.table(path2, header = TRUE, sep = "\t", row.names = 1)
View(data)
# row.names = 1 specify that the first column is the rownames
path <- "/home/francesco.massaini/GEMDeCan_deconvolution/results/all_deconvolutions/all_deconvolutions_BC2_TPM_Mounim_genes_filtered.txt"
path2<- "/home/francesco.massaini/GEMDeCan_deconvolution/results/all_deconvolutions/all_deconvolutions_BC2_TPM_Mounim_genes_filtered_half_patients.txt"
data <- read.table(path, header = TRUE, sep = "\t", row.names = 1)
data2 <- read.table(path2, header = TRUE, sep = "\t", row.names = 1)
result_file <- str_extract(path,"_.*?$")
# View(data[,grep("^Quantiseq.*", colnames(data))]) to visualize data
# Quantiseq <- data[,grep("^Quantiseq.*", colnames(data))]
methods.signatures <- read.table("/home/francesco.massaini/Desktop/methods.txt", header = FALSE, sep = "\t")
list_of_methods <- methods.signatures[,1]
fixedmet <- c(1,2,3)
list_of_methods <- list_of_methods[-fixedmet]
empty_pos <-  which(list_of_methods == "", arr.ind = TRUE)
list_of_methods <- list_of_methods[-empty_pos]
list_of_signature <- methods.signatures[,2]
all_ms <- list("Quantiseq","XCell","MCP")
for (i in list_of_methods) {
# print(paste("i", i))
for (j in list_of_signature){
# print(paste("j", j))
tmp <- paste(i,j, sep = "_")
# append(all_ms, tmp) doesn't work
all_ms <- c(all_ms, tmp)
# print(paste("tmp", tmp))
}
}
for (i in all_ms) {
print(i)
methods <- data[,grep(i, colnames(data))]
# plot_bymethod(methods, result_file)
methods2 <- data2[,grep(i, colnames(data2))]
message(identical(methods, methods2))
}
ethods <- data[,grep(all_ms[1], colnames(data))
methods <- data[,grep(all_ms[1], colnames(data))]
methods <- data[,grep(all_ms[1], colnames(data))]
View(methods)
methods2 <- data2[,grep(all_ms[1], colnames(data2))]
View(methods2)
?round()
for (i in all_ms) {
print(i)
methods <- data[,grep(i, colnames(data))] %>%
round(digits = 4)
# plot_bymethod(methods, result_file)
methods2 <- data2[,grep(i, colnames(data2))] %>%
round(digits = 4)
message(identical(methods, methods2))
}
library(dplyr)
for (i in all_ms) {
print(i)
methods <- data[,grep(i, colnames(data))] %>%
round(digits = 4)
# plot_bymethod(methods, result_file)
methods2 <- data2[,grep(i, colnames(data2))] %>%
round(digits = 4)
message(identical(methods, methods2))
}
methods <- data[,grep(all_ms[1], colnames(data))] %>%
round(digits = 4)
methods2 <- data2[,grep(all_ms[1], colnames(data2))] %>%
round(digits = 4)
for (i in all_ms) {
print(i)
methods <- data[rownames(data)%in%rownames(data2),grep(i, colnames(data))] %>%
round(digits = 4)
# plot_bymethod(methods, result_file)
methods2 <- data2[,grep(i, colnames(data2))] %>%
round(digits = 4)
message(identical(methods, methods2))
}
path <- "/home/francesco.massaini/GEMDeCan_deconvolution/results/all_deconvolutions/all_deconvolutions_BC2_TPM_Mounim_genes_filtered.txt"
# path2<- "/home/francesco.massaini/GEMDeCan_deconvolution/results/all_deconvolutions/all_deconvolutions_BC2_TPM_Mounim_genes_filtered_half_patients.txt"
path2<- "/home/francesco.massaini/Desktop/IMMUCAN_data/BC2/03_Deconvolution/all_deconvolutions_BC2_TPM_Mounim.txt"
data <- read.table(path, header = TRUE, sep = "\t", row.names = 1)
data2 <- read.table(path2, header = TRUE, sep = "\t", row.names = 1)
result_file <- str_extract(path,"_.*?$")
# head(data)
# View(data[,grep("^Quantiseq.*", colnames(data))]) to visualize data
# Quantiseq <- data[,grep("^Quantiseq.*", colnames(data))]
methods.signatures <- read.table("/home/francesco.massaini/Desktop/methods.txt", header = FALSE, sep = "\t")
list_of_methods <- methods.signatures[,1]
fixedmet <- c(1,2,3)
list_of_methods <- list_of_methods[-fixedmet]
empty_pos <-  which(list_of_methods == "", arr.ind = TRUE)
list_of_methods <- list_of_methods[-empty_pos]
list_of_signature <- methods.signatures[,2]
all_ms <- list("Quantiseq","XCell","MCP")
for (i in list_of_methods) {
# print(paste("i", i))
for (j in list_of_signature){
# print(paste("j", j))
tmp <- paste(i,j, sep = "_")
# append(all_ms, tmp) doesn't work
all_ms <- c(all_ms, tmp)
# print(paste("tmp", tmp))
}
}
for (i in all_ms) {
print(i)
methods <- data[rownames(data)%in%rownames(data2),grep(i, colnames(data))] %>%
round(digits = 4)
# plot_bymethod(methods, result_file)
methods2 <- data2[,grep(i, colnames(data2))] %>%
round(digits = 4)
message(identical(methods, methods2))
}
