geom_tile() +
labs(fill = paste0(cor_type, "'s\nCorrelation"), title = paste("Correlations", y_label ,"Features vs", x_label),
subtitle = paste0("Only significant ", cor_type, "'s correlation coefficients shown.\nSignificance level: ", significance_level, ". Low corr threshold: ", low_corr_threshold, ". High corr threshold: ", high_corr_threshold)) +
scale_fill_gradient2(mid = "#FBFEF9", low = "#0C6291", high = "#A63446", limits = c(-1, 1)) +
geom_text() +
theme_classic() +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0)) +
theme(text = element_text(family = "Roboto"), axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1)) +
xlab(x_label) +
ylab(y_label)
if (save_png == T){
# Save the plot
ggsave(filename = paste0(output_folder, file_name, "_" , cor_type, ".png"), plot = last_plot(), width = png_width, height = png_height)
message(paste("File saved in", file_name))
}
return(plot)
}
# Computing correlation between CellTFusion Deconvolution features and imaging
corr_method <- "spearman"
imaging = "IMC"
Deconv = "CellTFusion"
p_value_threshold <- 0.05
low_corr <- -0.5
high_corr <- 0.5
corr_results <- compute_correlation(deconv_path = "/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/04_CellTFusion/Whitout_CD226_and_without_patient3/Deconvolution_after_subgrouping.csv",
imaging_path = "/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/01_IF_IMC/IMC_cell_type_densities.csv",
imaging_pattern_to_remove = "",
deconv_pattern_to_remove = "-RNA-01|-RNA-02|-RNA-04|-FIXT-01",
significance_level = p_value_threshold,
low_corr_threshold = low_corr,
high_corr_threshold = high_corr,
cor_type = corr_method,
imaging_type = imaging,
deconv_type = Deconv)
read.csv("/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/04_CellTFusion/Whitout_CD226_and_without_patient3/IMC_CellTFusion_result/Deconvolution_after_subgrouping.csv")
a= read.csv("/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/04_CellTFusion/Whitout_CD226_and_without_patient3/IMC_CellTFusion_result/Deconvolution_after_subgrouping.csv")
View(a)
corr_results <- compute_correlation(deconv_path = "/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/04_CellTFusion/Whitout_CD226_and_without_patient3/IMC_CellTFusion_result/Deconvolution_after_subgrouping.csv",
imaging_path = "/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/01_IF_IMC/IMC_cell_type_densities.csv",
imaging_pattern_to_remove = "",
deconv_pattern_to_remove = "",
significance_level = p_value_threshold,
low_corr_threshold = low_corr,
high_corr_threshold = high_corr,
cor_type = corr_method,
imaging_type = imaging,
deconv_type = Deconv)
plot_correlation_matrix(high_corr_pairs = corr_results[[1]],
cor_type = corr_method,
file_name = paste(Deconv, "vs", imaging, sep = "_"),
output_folder = output_folder_CellTFusion,
save_png = T,
x_label = imaging,
y_label = Deconv,
significance_level = p_value_threshold,
high_corr_threshold = high_corr,
low_corr_threshold = low_corr)
output_folder_CellTFusion = "/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/04_CellTFusion/Whitout_CD226_and_without_patient3/Correlations/all_vs_all"
plot_correlation_matrix(high_corr_pairs = corr_results[[1]],
cor_type = corr_method,
file_name = paste(Deconv, "vs", imaging, sep = "_"),
output_folder = output_folder_CellTFusion,
save_png = T,
x_label = imaging,
y_label = Deconv,
significance_level = p_value_threshold,
high_corr_threshold = high_corr,
low_corr_threshold = low_corr,
png_width = 20,
png_height = 20
)
# Apri il dispositivo PDF
pdf(file = paste0(output_folder_CellTFusion, "scatterplot_", Deconv, "_vs_", imaging, ".pdf"))
for (i in 1:nrow(corr_results[[1]])) {
# Imposta due plot per pagina
if (i %% 2 == 1 || nrow(corr_results[[1]]) == 1) {  # Apre una nuova pagina se i è dispari o c'è solo un plot
par(mfrow=c(2, 1))
}
# Seleziona i dati per il plot
x <- dplyr::select(corr_results[[6]], corr_results[[1]][i, "Feature1"])
y <- dplyr::select(corr_results[[6]], corr_results[[1]][i, "Feature2"])
# Calcola il modello di regressione lineare e aggiungi la linea di regressione
model <- lm(y[, 1] ~ x[, 1])
# Calcola R^2 e aggiungi il testo al plot
r <- summary(model)$r.squared
# Crea il plot
plot(x[, 1], y[, 1],
main = "Scatter Plot",
xlab = corr_results[[1]][i, "Feature1"],
ylab = corr_results[[1]][i, "Feature2"],
cex.lab = 0.75)
abline(model, col = "red")
mtext(paste("R^2:", round(r, 2)), side = 3, line = 0.5, adj = 0)
# Non chiudere il dispositivo dopo ogni plot
}
# Chiudi il dispositivo PDF dopo che tutti i plot sono stati generati
dev.off()
pdf(file = paste0(output_folder_CellTFusion, "scatterplot_", Deconv, "_vs_", imaging, ".pdf"))
for (i in 1:nrow(corr_results[[1]])) {
# Imposta due plot per pagina
if (i %% 2 == 1 || nrow(corr_results[[1]]) == 1) {  # Apre una nuova pagina se i è dispari o c'è solo un plot
par(mfrow=c(2, 1))
}
# Seleziona i dati per il plot
x <- dplyr::select(corr_results[[6]], corr_results[[1]][i, "Feature1"])
y <- dplyr::select(corr_results[[6]], corr_results[[1]][i, "Feature2"])
# Calcola il modello di regressione lineare e aggiungi la linea di regressione
model <- lm(y[, 1] ~ x[, 1])
# Calcola R^2 e aggiungi il testo al plot
r <- summary(model)$r.squared
# Crea il plot
plot(x[, 1], y[, 1],
main = "Scatter Plot",
xlab = corr_results[[1]][i, "Feature1"],
ylab = corr_results[[1]][i, "Feature2"],
cex.lab = 0.75)
abline(model, col = "red")
mtext(paste("R^2:", round(r, 2)), side = 3, line = 0.5, adj = 0)
# Non chiudere il dispositivo dopo ogni plot
}
# Chiudi il dispositivo PDF dopo che tutti i plot sono stati generati
dev.off()
a = read.csv("/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/01_IF_IMC/all_IFs_cell_type_fraction.csv")
View(a)
# Computing correlation between CellTFusion Deconvolution features and imaging
corr_method <- "spearman"
imaging = "mIFs"
Deconv = "CellTFusion"
p_value_threshold <- 0.05
low_corr <- -0.5
high_corr <- 0.5
output_folder_CellTFusion = "/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/04_CellTFusion/Whitout_CD226_and_without_patient3/Correlations/all_vs_all/"
corr_results <- compute_correlation(deconv_path = "/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/04_CellTFusion/Whitout_CD226_and_without_patient3/Deconvolution_after_subgrouping.csv",
imaging_path = "/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/01_IF_IMC/all_IFs_cell_type_fraction.csv",
imaging_pattern_to_remove = "-FIXT-01",
deconv_pattern_to_remove = "",
significance_level = p_value_threshold,
low_corr_threshold = low_corr,
high_corr_threshold = high_corr,
cor_type = corr_method,
imaging_type = imaging,
deconv_type = Deconv)
corr_results <- compute_correlation(deconv_path = "/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/04_CellTFusion/Whitout_CD226_and_without_patient3/IF_CellTFusion_result/Deconvolution_after_subgrouping.csv",
imaging_path = "/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/01_IF_IMC/all_IFs_cell_type_fraction.csv",
imaging_pattern_to_remove = "-FIXT-01",
deconv_pattern_to_remove = "",
significance_level = p_value_threshold,
low_corr_threshold = low_corr,
high_corr_threshold = high_corr,
cor_type = corr_method,
imaging_type = imaging,
deconv_type = Deconv)
plot_correlation_matrix(high_corr_pairs = corr_results[[1]],
cor_type = corr_method,
file_name = paste(Deconv, "vs", imaging, sep = "_"),
output_folder = output_folder_CellTFusion,
save_png = T,
x_label = imaging,
y_label = Deconv,
significance_level = p_value_threshold,
high_corr_threshold = high_corr,
low_corr_threshold = low_corr,
png_width = 20,
png_height = 20
)
# IF2
imaging_method = "IF2"
Deconv_method = "CellTFusion"
corr_method <- "spearman"
imaging = read.csv("/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/01_IF_IMC/IF2_cell_type_fraction.csv", row.names = 1)
imaging = imaging[,-1]
rownames(imaging) <- str_remove_all(string = rownames(imaging), pattern = "-RNA-01|-RNA-02|-RNA-04|-FIXT-01|-IF1-01")
load("/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/04_CellTFusion/Whitout_CD226_and_without_patient3/IF_CellTFusion_result/CellTFusion_Subgroups.RData")
common_patients <- intersect(rownames(imaging), rownames(dt[[1]]))
imaging_common <- imaging[common_patients,]
# Correlation by cell types
correlation <- function(data, corr) {
require(tidyr)
M <- Hmisc::rcorr(as.matrix(data), type = corr)
Mdf <- map(M, ~data.frame(.x))
corr_df = Mdf %>%
map(~rownames_to_column(.x, var="measure1")) %>%
map(~pivot_longer(.x, -measure1, names_to = "measure2")) %>%
bind_rows(.id = "id") %>%
pivot_wider(names_from = id, values_from = value) %>%
mutate(sig_p = ifelse(P < .05, T, F),
p_if_sig = ifelse(sig_p, P, NA),
r_if_sig = ifelse(sig_p, r, NA))
return(corr_df)
}
dt_cell_types = dt[["Deconvolution groups per cell types"]]
for (i in names(dt_cell_types)) {
imaging_common <- imaging[common_patients,]
#imaging_common <- imaging_common[, c(i,setdiff(names(imaging_common), i))]
if(ncol(dt_cell_types[[i, drop = FALSE]]) != 0){
df_corr_cell_type <- cbind(imaging_common, dt_cell_types[[i, drop = FALSE]])
x <- correlation(df_corr_cell_type, corr = corr_method)
x = filter(x, (measure1 %in% colnames(imaging_common) & measure2 %in% colnames(dt_cell_types[[i]]))) %>%# only taking ground vs deconv
arrange(desc(r))
pdf(paste0("../IMMUCAN_data/NSCLC2/04_CellTFusion/Whitout_CD226_and_without_patient3/Correlations/Splitting_celltype/IF2/", Deconv_method, "_", i ,"_vs_", imaging_method , "_", corr_method,".pdf"), width = 15)
p = ggplot(data = x, aes(y = measure2, x = measure1, fill=r, label=round(r_if_sig,2))) +
geom_tile() +
labs(fill = paste0(corr_method, "'s\nCorrelation"), title = paste("Correlations", Deconv_method ,"Features vs", imaging_method),
subtitle = paste0("Only significant ", corr_method, "'s correlation coefficients shown.")) +
scale_fill_gradient2(mid="#FBFEF9",low="#0C6291",high="#A63446", limits=c(-1,1)) +
geom_text() +
theme_classic() +
scale_x_discrete(expand=c(0,0)) +
scale_y_discrete(expand=c(0,0)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1), axis.text.y = element_text(size = 10)) +
xlab(imaging_method) +
ylab(Deconv_method)
print(p)
dev.off()
}
}
common_patients <- intersect(rownames(imaging), rownames(dt[[1]]))
load("/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/04_CellTFusion/Whitout_CD226_and_without_patient3/IF_CellTFusion_result/CellTFusion_Subgroups.RData")
imaging = imaging[,-1]
rownames(imaging) <- str_remove_all(string = rownames(imaging), pattern = "-RNA-01|-RNA-02|-RNA-04|-FIXT-01|-IF1-02")
load("/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/04_CellTFusion/Whitout_CD226_and_without_patient3/IF_CellTFusion_result/CellTFusion_Subgroups.RData")
common_patients <- intersect(rownames(imaging), rownames(dt[[1]]))
View(imaging)
imaging = imaging[,-1]
rownames(imaging) <- str_remove_all(string = rownames(imaging), pattern = "-RNA-01|-RNA-02|-RNA-04|-FIXT-01|-IF2-01")
load("/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/04_CellTFusion/Whitout_CD226_and_without_patient3/IF_CellTFusion_result/CellTFusion_Subgroups.RData")
common_patients <- intersect(rownames(imaging), rownames(dt[[1]]))
# IF2
imaging_method = "IF2"
Deconv_method = "CellTFusion"
corr_method <- "spearman"
imaging = read.csv("/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/01_IF_IMC/IF2_cell_type_fraction.csv", row.names = 1)
imaging = imaging[,-1]
rownames(imaging) <- str_remove_all(string = rownames(imaging), pattern = "-RNA-01|-RNA-02|-RNA-04|-FIXT-01|-IF2-01")
load("/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/04_CellTFusion/Whitout_CD226_and_without_patient3/IF_CellTFusion_result/CellTFusion_Subgroups.RData")
common_patients <- intersect(rownames(imaging), rownames(dt[[1]]))
imaging_common <- imaging[common_patients,]
# Correlation by cell types
correlation <- function(data, corr) {
require(tidyr)
M <- Hmisc::rcorr(as.matrix(data), type = corr)
Mdf <- map(M, ~data.frame(.x))
corr_df = Mdf %>%
map(~rownames_to_column(.x, var="measure1")) %>%
map(~pivot_longer(.x, -measure1, names_to = "measure2")) %>%
bind_rows(.id = "id") %>%
pivot_wider(names_from = id, values_from = value) %>%
mutate(sig_p = ifelse(P < .05, T, F),
p_if_sig = ifelse(sig_p, P, NA),
r_if_sig = ifelse(sig_p, r, NA))
return(corr_df)
}
dt_cell_types = dt[["Deconvolution groups per cell types"]]
for (i in names(dt_cell_types)) {
imaging_common <- imaging[common_patients,]
#imaging_common <- imaging_common[, c(i,setdiff(names(imaging_common), i))]
if(ncol(dt_cell_types[[i, drop = FALSE]]) != 0){
df_corr_cell_type <- cbind(imaging_common, dt_cell_types[[i, drop = FALSE]])
x <- correlation(df_corr_cell_type, corr = corr_method)
x = filter(x, (measure1 %in% colnames(imaging_common) & measure2 %in% colnames(dt_cell_types[[i]]))) %>%# only taking ground vs deconv
arrange(desc(r))
pdf(paste0("../IMMUCAN_data/NSCLC2/04_CellTFusion/Whitout_CD226_and_without_patient3/Correlations/Splitting_celltype/IF2/", Deconv_method, "_", i ,"_vs_", imaging_method , "_", corr_method,".pdf"), width = 15)
p = ggplot(data = x, aes(y = measure2, x = measure1, fill=r, label=round(r_if_sig,2))) +
geom_tile() +
labs(fill = paste0(corr_method, "'s\nCorrelation"), title = paste("Correlations", Deconv_method ,"Features vs", imaging_method),
subtitle = paste0("Only significant ", corr_method, "'s correlation coefficients shown.")) +
scale_fill_gradient2(mid="#FBFEF9",low="#0C6291",high="#A63446", limits=c(-1,1)) +
geom_text() +
theme_classic() +
scale_x_discrete(expand=c(0,0)) +
scale_y_discrete(expand=c(0,0)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1), axis.text.y = element_text(size = 10)) +
xlab(imaging_method) +
ylab(Deconv_method)
print(p)
dev.off()
}
}
knitr::opts_chunk$set(fig.width=10, fig.height=10)
library(dplyr)
library(tibble)
library(tidyr)
library(org.Hs.eg.db) # Homo sapiens db
library(stringr)
library(RColorBrewer) # for plot
library(pheatmap) # for heatmaps
library(ADImpute) # This package provides functions to compute TPM
library(ggplot2)
library(FactoMineR)
library(factoextra)
library(survival)
library(ranger)
library(ggfortify)
library(rlang)
library(purrr)
library(rio)
imaging_method = "IF1"
Deconv_method = "CellTFusion"
corr_method <- "spearman"
imaging = read.csv("/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/01_IF_IMC/IF1_cell_type_fraction.csv", row.names = 1)
imaging = imaging[,-1]
rownames(imaging) <- str_remove_all(string = rownames(imaging), pattern = "-RNA-01|-RNA-02|-RNA-04|-FIXT-01|-IF1-01")
load("/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/04_CellTFusion/Whitout_CD226_and_without_patient3/IF_CellTFusion_result/CellTFusion_Subgroups.RData")
common_patients <- intersect(rownames(imaging), rownames(dt[[1]]))
imaging_common <- imaging[common_patients,]
# Correlation by cell types
correlation <- function(data, corr) {
require(tidyr)
M <- Hmisc::rcorr(as.matrix(data), type = corr)
Mdf <- map(M, ~data.frame(.x))
corr_df = Mdf %>%
map(~rownames_to_column(.x, var="measure1")) %>%
map(~pivot_longer(.x, -measure1, names_to = "measure2")) %>%
bind_rows(.id = "id") %>%
pivot_wider(names_from = id, values_from = value) %>%
mutate(sig_p = ifelse(P < .05, T, F),
p_if_sig = ifelse(sig_p, P, NA),
r_if_sig = ifelse(sig_p, r, NA))
return(corr_df)
}
dt_cell_types = dt[["Deconvolution groups per cell types"]]
for (i in names(dt_cell_types)) {
imaging_common <- imaging[common_patients,]
#imaging_common <- imaging_common[, c(i,setdiff(names(imaging_common), i))]
if(ncol(dt_cell_types[[i, drop = FALSE]]) != 0){
df_corr_cell_type <- cbind(imaging_common, dt_cell_types[[i, drop = FALSE]])
x <- correlation(df_corr_cell_type, corr = corr_method)
x = filter(x, (measure1 %in% colnames(imaging_common) & measure2 %in% colnames(dt_cell_types[[i]]))) %>%# only taking ground vs deconv
arrange(desc(r))
pdf(paste0("../IMMUCAN_data/NSCLC2/04_CellTFusion/Whitout_CD226_and_without_patient3/Correlations/Splitting_celltype/IF1/", Deconv_method, "_", i ,"_vs_", imaging_method , "_", corr_method,".pdf"), width = 15)
p = ggplot(data = x, aes(y = measure2, x = measure1, fill=r, label=round(r_if_sig,2))) +
geom_tile() +
labs(fill = paste0(corr_method, "'s\nCorrelation"), title = paste("Correlations", Deconv_method ,"Features vs", imaging_method),
subtitle = paste0("Only significant ", corr_method, "'s correlation coefficients shown.")) +
scale_fill_gradient2(mid="#FBFEF9",low="#0C6291",high="#A63446", limits=c(-1,1)) +
geom_text() +
theme_classic() +
scale_x_discrete(expand=c(0,0)) +
scale_y_discrete(expand=c(0,0)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1), axis.text.y = element_text(size = 10)) +
xlab(imaging_method) +
ylab(Deconv_method)
print(p)
dev.off()
}
}
# IF2
imaging_method = "IF2"
Deconv_method = "CellTFusion"
corr_method <- "spearman"
imaging = read.csv("/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/01_IF_IMC/IF2_cell_type_fraction.csv", row.names = 1)
imaging = imaging[,-1]
rownames(imaging) <- str_remove_all(string = rownames(imaging), pattern = "-RNA-01|-RNA-02|-RNA-04|-FIXT-01|-IF2-01")
load("/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/04_CellTFusion/Whitout_CD226_and_without_patient3/IF_CellTFusion_result/CellTFusion_Subgroups.RData")
common_patients <- intersect(rownames(imaging), rownames(dt[[1]]))
imaging_common <- imaging[common_patients,]
# Correlation by cell types
correlation <- function(data, corr) {
require(tidyr)
M <- Hmisc::rcorr(as.matrix(data), type = corr)
Mdf <- map(M, ~data.frame(.x))
corr_df = Mdf %>%
map(~rownames_to_column(.x, var="measure1")) %>%
map(~pivot_longer(.x, -measure1, names_to = "measure2")) %>%
bind_rows(.id = "id") %>%
pivot_wider(names_from = id, values_from = value) %>%
mutate(sig_p = ifelse(P < .05, T, F),
p_if_sig = ifelse(sig_p, P, NA),
r_if_sig = ifelse(sig_p, r, NA))
return(corr_df)
}
dt_cell_types = dt[["Deconvolution groups per cell types"]]
for (i in names(dt_cell_types)) {
imaging_common <- imaging[common_patients,]
#imaging_common <- imaging_common[, c(i,setdiff(names(imaging_common), i))]
if(ncol(dt_cell_types[[i, drop = FALSE]]) != 0){
df_corr_cell_type <- cbind(imaging_common, dt_cell_types[[i, drop = FALSE]])
x <- correlation(df_corr_cell_type, corr = corr_method)
x = filter(x, (measure1 %in% colnames(imaging_common) & measure2 %in% colnames(dt_cell_types[[i]]))) %>%# only taking ground vs deconv
arrange(desc(r))
pdf(paste0("../IMMUCAN_data/NSCLC2/04_CellTFusion/Whitout_CD226_and_without_patient3/Correlations/Splitting_celltype/IF2/", Deconv_method, "_", i ,"_vs_", imaging_method , "_", corr_method,".pdf"), width = 15)
p = ggplot(data = x, aes(y = measure2, x = measure1, fill=r, label=round(r_if_sig,2))) +
geom_tile() +
labs(fill = paste0(corr_method, "'s\nCorrelation"), title = paste("Correlations", Deconv_method ,"Features vs", imaging_method),
subtitle = paste0("Only significant ", corr_method, "'s correlation coefficients shown.")) +
scale_fill_gradient2(mid="#FBFEF9",low="#0C6291",high="#A63446", limits=c(-1,1)) +
geom_text() +
theme_classic() +
scale_x_discrete(expand=c(0,0)) +
scale_y_discrete(expand=c(0,0)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1), axis.text.y = element_text(size = 10)) +
xlab(imaging_method) +
ylab(Deconv_method)
print(p)
dev.off()
}
}
imaging_method = "IF3"
Deconv_method = "CellTFusion"
corr_method <- "spearman"
imaging = read.csv("/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/01_IF_IMC/IF3_cell_type_fraction.csv", row.names = 1)
imaging = imaging[,-1]
rownames(imaging) <- str_remove_all(string = rownames(imaging), pattern = "-RNA-01|-RNA-02|-RNA-04|-FIXT-01|-IF2-01")
load("/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/04_CellTFusion/Whitout_CD226_and_without_patient3/IF_CellTFusion_result/CellTFusion_Subgroups.RData")
common_patients <- intersect(rownames(imaging), rownames(dt[[1]]))
imaging_common <- imaging[common_patients,]
# Correlation by cell types
correlation <- function(data, corr) {
require(tidyr)
M <- Hmisc::rcorr(as.matrix(data), type = corr)
Mdf <- map(M, ~data.frame(.x))
corr_df = Mdf %>%
map(~rownames_to_column(.x, var="measure1")) %>%
map(~pivot_longer(.x, -measure1, names_to = "measure2")) %>%
bind_rows(.id = "id") %>%
pivot_wider(names_from = id, values_from = value) %>%
mutate(sig_p = ifelse(P < .05, T, F),
p_if_sig = ifelse(sig_p, P, NA),
r_if_sig = ifelse(sig_p, r, NA))
return(corr_df)
}
dt_cell_types = dt[["Deconvolution groups per cell types"]]
for (i in names(dt_cell_types)) {
imaging_common <- imaging[common_patients,]
#imaging_common <- imaging_common[, c(i,setdiff(names(imaging_common), i))]
if(ncol(dt_cell_types[[i, drop = FALSE]]) != 0){
df_corr_cell_type <- cbind(imaging_common, dt_cell_types[[i, drop = FALSE]])
x <- correlation(df_corr_cell_type, corr = corr_method)
x = filter(x, (measure1 %in% colnames(imaging_common) & measure2 %in% colnames(dt_cell_types[[i]]))) %>%# only taking ground vs deconv
arrange(desc(r))
pdf(paste0("../IMMUCAN_data/NSCLC2/04_CellTFusion/Whitout_CD226_and_without_patient3/Correlations/Splitting_celltype/IF3/", Deconv_method, "_", i ,"_vs_", imaging_method , "_", corr_method,".pdf"), width = 15)
p = ggplot(data = x, aes(y = measure2, x = measure1, fill=r, label=round(r_if_sig,2))) +
geom_tile() +
labs(fill = paste0(corr_method, "'s\nCorrelation"), title = paste("Correlations", Deconv_method ,"Features vs", imaging_method),
subtitle = paste0("Only significant ", corr_method, "'s correlation coefficients shown.")) +
scale_fill_gradient2(mid="#FBFEF9",low="#0C6291",high="#A63446", limits=c(-1,1)) +
geom_text() +
theme_classic() +
scale_x_discrete(expand=c(0,0)) +
scale_y_discrete(expand=c(0,0)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1), axis.text.y = element_text(size = 10)) +
xlab(imaging_method) +
ylab(Deconv_method)
print(p)
dev.off()
}
}
rownames(imaging) <- str_remove_all(string = rownames(imaging), pattern = "-RNA-01|-RNA-02|-RNA-04|-FIXT-01|-IF2-01")
# IF3
imaging_method = "IF3"
Deconv_method = "CellTFusion"
corr_method <- "spearman"
imaging = read.csv("/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/01_IF_IMC/IF3_cell_type_fraction.csv", row.names = 1)
imaging = imaging[,-1]
rownames(imaging) <- str_remove_all(string = rownames(imaging), pattern = "-RNA-01|-RNA-02|-RNA-04|-FIXT-01|-IF3-01")
load("/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/04_CellTFusion/Whitout_CD226_and_without_patient3/IF_CellTFusion_result/CellTFusion_Subgroups.RData")
common_patients <- intersect(rownames(imaging), rownames(dt[[1]]))
imaging_common <- imaging[common_patients,]
# Correlation by cell types
correlation <- function(data, corr) {
require(tidyr)
M <- Hmisc::rcorr(as.matrix(data), type = corr)
Mdf <- map(M, ~data.frame(.x))
corr_df = Mdf %>%
map(~rownames_to_column(.x, var="measure1")) %>%
map(~pivot_longer(.x, -measure1, names_to = "measure2")) %>%
bind_rows(.id = "id") %>%
pivot_wider(names_from = id, values_from = value) %>%
mutate(sig_p = ifelse(P < .05, T, F),
p_if_sig = ifelse(sig_p, P, NA),
r_if_sig = ifelse(sig_p, r, NA))
return(corr_df)
}
dt_cell_types = dt[["Deconvolution groups per cell types"]]
for (i in names(dt_cell_types)) {
imaging_common <- imaging[common_patients,]
#imaging_common <- imaging_common[, c(i,setdiff(names(imaging_common), i))]
if(ncol(dt_cell_types[[i, drop = FALSE]]) != 0){
df_corr_cell_type <- cbind(imaging_common, dt_cell_types[[i, drop = FALSE]])
x <- correlation(df_corr_cell_type, corr = corr_method)
x = filter(x, (measure1 %in% colnames(imaging_common) & measure2 %in% colnames(dt_cell_types[[i]]))) %>%# only taking ground vs deconv
arrange(desc(r))
pdf(paste0("../IMMUCAN_data/NSCLC2/04_CellTFusion/Whitout_CD226_and_without_patient3/Correlations/Splitting_celltype/IF3/", Deconv_method, "_", i ,"_vs_", imaging_method , "_", corr_method,".pdf"), width = 15)
p = ggplot(data = x, aes(y = measure2, x = measure1, fill=r, label=round(r_if_sig,2))) +
geom_tile() +
labs(fill = paste0(corr_method, "'s\nCorrelation"), title = paste("Correlations", Deconv_method ,"Features vs", imaging_method),
subtitle = paste0("Only significant ", corr_method, "'s correlation coefficients shown.")) +
scale_fill_gradient2(mid="#FBFEF9",low="#0C6291",high="#A63446", limits=c(-1,1)) +
geom_text() +
theme_classic() +
scale_x_discrete(expand=c(0,0)) +
scale_y_discrete(expand=c(0,0)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1), axis.text.y = element_text(size = 10)) +
xlab(imaging_method) +
ylab(Deconv_method)
print(p)
dev.off()
}
}
View(dt)
knitr::opts_chunk$set(fig.width=10, fig.height=10)
# Keeping only common patients and subsetting deconv and IF
common_patients <- intersect(rownames(clinical), rownames(deconv))
# Keeping only common patients and subsetting deconv and IF
common_patients <- intersect(rownames(clinical), rownames(deconv))
clinical_common <- clinical[common_patients,] %>%
dplyr::select(death, gender, stage, side_localization, smoking_status, neo_adjuvant_treatment, adjuvant_treatment, type_of_adj_trt, metastatic_treatment, simple_histology, simple_stage, primary_localization, long_survivors, T_stage, M_stage, N_stage, primary_tumor_size, TIL_score)
deconv_common <- deconv[common_patients, ] # %>%
# loading clinical file and using the same patient names convention for IF and deconvlution results. Deleting also Tumor counts from IF data
clinical <- read.csv("/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/01_Clinical_Data/Daniel/NSCLC2_for_R_update_2024.csv", header = 1) %>%
column_to_rownames(var = "immucan_id")
