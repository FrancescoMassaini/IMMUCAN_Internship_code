pdf(file = paste0(output_folder_deconvolution, "scatterplot_", Deconv, "_vs_", imaging, ".pdf"))
for (i in 1:nrow(corr_results[[1]])) {
# Imposta due plot per pagina
if (i %% 2 == 1 || nrow(corr_results[[1]]) == 1) {  # Apre una nuova pagina se i è dispari o c'è solo un plot
par(mfrow=c(2, 1))
}
# Seleziona i dati per il plot
x <- dplyr::select(corr_results[[6]], corr_results[[1]][i, "Feature1"])
y <- dplyr::select(corr_results[[6]], corr_results[[1]][i, "Feature2"])
# Crea il plot
plot(x[, 1], y[, 1], main = "Scatter Plot", xlab = corr_results[[1]][i, "Feature1"], ylab = corr_results[[1]][i, "Feature2"])
# Calcola il modello di regressione lineare e aggiungi la linea di regressione
model <- lm(y[, 1] ~ x[, 1])
abline(model, col = "red")
# Calcola R^2 e aggiungi il testo al plot
r <- summary(model)$r.squared
text(x = max(x[, 1], na.rm = TRUE) * 0.7, y = max(y[, 1], na.rm = TRUE), labels = paste("R^2 =", round(r, 2)), col = "red")
# Non chiudere il dispositivo dopo ogni plot
}
# Chiudi il dispositivo PDF dopo che tutti i plot sono stati generati
dev.off()
pdf(file = paste0(output_folder_deconvolution, "scatterplot_", Deconv, "_vs_", imaging, ".pdf"))
for (i in 1:nrow(corr_results[[1]])) {
# Imposta due plot per pagina
if (i %% 2 == 1 || nrow(corr_results[[1]]) == 1) {  # Apre una nuova pagina se i è dispari o c'è solo un plot
par(mfrow=c(2, 1))
}
# Seleziona i dati per il plot
x <- dplyr::select(corr_results[[6]], corr_results[[1]][i, "Feature1"])
y <- dplyr::select(corr_results[[6]], corr_results[[1]][i, "Feature2"])
# Crea il plot
plot(x[, 1], y[, 1], main = "Scatter Plot", xlab = corr_results[[1]][i, "Feature1"], ylab = corr_results[[1]][i, "Feature2"])
# Calcola il modello di regressione lineare e aggiungi la linea di regressione
model <- lm(y[, 1] ~ x[, 1])
abline(model, col = "red")
# Calcola R^2 e aggiungi il testo al plot
r <- summary(model)$r.squared
text(x = max(x[, 1], na.rm = TRUE) * 0.7, y = max(y[, 1], na.rm = TRUE), labels = paste("R^2 =", round(r, 2)), col = "red")
# Non chiudere il dispositivo dopo ogni plot
}
# Chiudi il dispositivo PDF dopo che tutti i plot sono stati generati
dev.off()
pdf(file = paste0(output_folder_deconvolution, "scatterplot_", Deconv, "_vs_", imaging, ".pdf"))
for (i in 1:nrow(corr_results[[1]])) {
# Imposta due plot per pagina
if (i %% 2 == 1 || nrow(corr_results[[1]]) == 1) {  # Apre una nuova pagina se i è dispari o c'è solo un plot
par(mfrow=c(2, 1))
}
# Seleziona i dati per il plot
x <- dplyr::select(corr_results[[6]], corr_results[[1]][i, "Feature1"])
y <- dplyr::select(corr_results[[6]], corr_results[[1]][i, "Feature2"])
# Crea il plot
plot(x[, 1], y[, 1], main = "Scatter Plot",
xlab = corr_results[[1]][i, "Feature1"],
ylab = corr_results[[1]][i, "Feature2"],
cex.lab = 0.75)
# Calcola il modello di regressione lineare e aggiungi la linea di regressione
model <- lm(y[, 1] ~ x[, 1])
abline(model, col = "red")
# Calcola R^2 e aggiungi il testo al plot
r <- summary(model)$r.squared
text(x = max(x[, 1], na.rm = TRUE) * 0.7, y = max(y[, 1], na.rm = TRUE), labels = paste("R^2 =", round(r, 2)), col = "red")
# Non chiudere il dispositivo dopo ogni plot
}
# Chiudi il dispositivo PDF dopo che tutti i plot sono stati generati
dev.off()
# Apri il dispositivo PDF
pdf(file = paste0(output_folder_deconvolution, "scatterplot_", Deconv, "_vs_", imaging, ".pdf"))
for (i in 1:nrow(corr_results[[1]])) {
# Imposta due plot per pagina
if (i %% 2 == 1 || nrow(corr_results[[1]]) == 1) {  # Apre una nuova pagina se i è dispari o c'è solo un plot
par(mfrow=c(2, 1))
}
# Seleziona i dati per il plot
x <- dplyr::select(corr_results[[6]], corr_results[[1]][i, "Feature1"])
y <- dplyr::select(corr_results[[6]], corr_results[[1]][i, "Feature2"])
# Calcola il modello di regressione lineare e aggiungi la linea di regressione
model <- lm(y[, 1] ~ x[, 1])
# Calcola R^2 e aggiungi il testo al plot
r <- summary(model)$r.squared
# Crea il plot
plot(x[, 1], y[, 1],
main = "Scatter Plot",
sub(paste("R^2:", r)),
xlab = corr_results[[1]][i, "Feature1"],
ylab = corr_results[[1]][i, "Feature2"],
cex.lab = 0.75)
abline(model, col = "red")
# Non chiudere il dispositivo dopo ogni plot
}
# Apri il dispositivo PDF
pdf(file = paste0(output_folder_deconvolution, "scatterplot_", Deconv, "_vs_", imaging, ".pdf"))
for (i in 1:nrow(corr_results[[1]])) {
# Imposta due plot per pagina
if (i %% 2 == 1 || nrow(corr_results[[1]]) == 1) {  # Apre una nuova pagina se i è dispari o c'è solo un plot
par(mfrow=c(2, 1))
}
# Seleziona i dati per il plot
x <- dplyr::select(corr_results[[6]], corr_results[[1]][i, "Feature1"])
y <- dplyr::select(corr_results[[6]], corr_results[[1]][i, "Feature2"])
# Calcola il modello di regressione lineare e aggiungi la linea di regressione
model <- lm(y[, 1] ~ x[, 1])
# Calcola R^2 e aggiungi il testo al plot
r <- summary(model)$r.squared
# Crea il plot
plot(x[, 1], y[, 1],
main = "Scatter Plot",
sub = paste("R^2:", r),
xlab = corr_results[[1]][i, "Feature1"],
ylab = corr_results[[1]][i, "Feature2"],
cex.lab = 0.75)
abline(model, col = "red")
# Non chiudere il dispositivo dopo ogni plot
}
for (i in 1:nrow(corr_results[[1]])) {
# Imposta due plot per pagina
if (i %% 2 == 1 || nrow(corr_results[[1]]) == 1) {  # Apre una nuova pagina se i è dispari o c'è solo un plot
par(mfrow=c(2, 1))
}
# Seleziona i dati per il plot
x <- dplyr::select(corr_results[[6]], corr_results[[1]][i, "Feature1"])
y <- dplyr::select(corr_results[[6]], corr_results[[1]][i, "Feature2"])
# Calcola il modello di regressione lineare e aggiungi la linea di regressione
model <- lm(y[, 1] ~ x[, 1])
# Calcola R^2 e aggiungi il testo al plot
r <- summary(model)$r.squared
# Crea il plot
plot(x[, 1], y[, 1],
main = "Scatter Plot",
sub = paste("R^2:", r),
xlab = corr_results[[1]][i, "Feature1"],
ylab = corr_results[[1]][i, "Feature2"],
cex.lab = 0.75)
abline(model, col = "red")
# Non chiudere il dispositivo dopo ogni plot
}
# Chiudi il dispositivo PDF dopo che tutti i plot sono stati generati
dev.off()
pdf(file = paste0(output_folder_deconvolution, "scatterplot_", Deconv, "_vs_", imaging, ".pdf"))
for (i in 1:nrow(corr_results[[1]])) {
# Imposta due plot per pagina
if (i %% 2 == 1 || nrow(corr_results[[1]]) == 1) {  # Apre una nuova pagina se i è dispari o c'è solo un plot
par(mfrow=c(2, 1))
}
# Seleziona i dati per il plot
x <- dplyr::select(corr_results[[6]], corr_results[[1]][i, "Feature1"])
y <- dplyr::select(corr_results[[6]], corr_results[[1]][i, "Feature2"])
# Calcola il modello di regressione lineare e aggiungi la linea di regressione
model <- lm(y[, 1] ~ x[, 1])
# Calcola R^2 e aggiungi il testo al plot
r <- summary(model)$r.squared
# Crea il plot
plot(x[, 1], y[, 1],
main = "Scatter Plot",
sub = paste("R^2:", r),
xlab = corr_results[[1]][i, "Feature1"],
ylab = corr_results[[1]][i, "Feature2"],
cex.lab = 0.75)
abline(model, col = "red")
# Non chiudere il dispositivo dopo ogni plot
}
# Chiudi il dispositivo PDF dopo che tutti i plot sono stati generati
dev.off()
pdf(file = paste0(output_folder_deconvolution, "scatterplot_", Deconv, "_vs_", imaging, ".pdf"))
for (i in 1:nrow(corr_results[[1]])) {
# Imposta due plot per pagina
if (i %% 2 == 1 || nrow(corr_results[[1]]) == 1) {  # Apre una nuova pagina se i è dispari o c'è solo un plot
par(mfrow=c(2, 1))
}
# Seleziona i dati per il plot
x <- dplyr::select(corr_results[[6]], corr_results[[1]][i, "Feature1"])
y <- dplyr::select(corr_results[[6]], corr_results[[1]][i, "Feature2"])
# Calcola il modello di regressione lineare e aggiungi la linea di regressione
model <- lm(y[, 1] ~ x[, 1])
# Calcola R^2 e aggiungi il testo al plot
r <- summary(model)$r.squared
# Crea il plot
plot(x[, 1], y[, 1],
main = "Scatter Plot",
sub = paste("R^2:", round(r, digit = 2)),
xlab = corr_results[[1]][i, "Feature1"],
ylab = corr_results[[1]][i, "Feature2"],
cex.lab = 0.75)
abline(model, col = "red")
# Non chiudere il dispositivo dopo ogni plot
}
# Chiudi il dispositivo PDF dopo che tutti i plot sono stati generati
dev.off()
# Apri il dispositivo PDF
pdf(file = paste0(output_folder_deconvolution, "scatterplot_", Deconv, "_vs_", imaging, ".pdf"))
for (i in 1:nrow(corr_results[[1]])) {
# Imposta due plot per pagina
if (i %% 2 == 1 || nrow(corr_results[[1]]) == 1) {  # Apre una nuova pagina se i è dispari o c'è solo un plot
par(mfrow=c(2, 1))
}
# Seleziona i dati per il plot
x <- dplyr::select(corr_results[[6]], corr_results[[1]][i, "Feature1"])
y <- dplyr::select(corr_results[[6]], corr_results[[1]][i, "Feature2"])
# Calcola il modello di regressione lineare e aggiungi la linea di regressione
model <- lm(y[, 1] ~ x[, 1])
# Calcola R^2 e aggiungi il testo al plot
r <- summary(model)$r.squared
# Crea il plot
plot(x[, 1], y[, 1],
main = "Scatter Plot",
sub = paste("R^2:", round(r, digit = 2)),
xlab = corr_results[[1]][i, "Feature1"],
ylab = corr_results[[1]][i, "Feature2"],
cex.lab = 0.75)
abline(model, col = "red")
mtext(paste("R^2:", round(r, 2)), side = 3, line = 0.5, adj = 0)
# Non chiudere il dispositivo dopo ogni plot
}
# Chiudi il dispositivo PDF dopo che tutti i plot sono stati generati
dev.off()
# Apri il dispositivo PDF
pdf(file = paste0(output_folder_deconvolution, "scatterplot_", Deconv, "_vs_", imaging, ".pdf"))
for (i in 1:nrow(corr_results[[1]])) {
# Imposta due plot per pagina
if (i %% 2 == 1 || nrow(corr_results[[1]]) == 1) {  # Apre una nuova pagina se i è dispari o c'è solo un plot
par(mfrow=c(2, 1))
}
# Seleziona i dati per il plot
x <- dplyr::select(corr_results[[6]], corr_results[[1]][i, "Feature1"])
y <- dplyr::select(corr_results[[6]], corr_results[[1]][i, "Feature2"])
# Calcola il modello di regressione lineare e aggiungi la linea di regressione
model <- lm(y[, 1] ~ x[, 1])
# Calcola R^2 e aggiungi il testo al plot
r <- summary(model)$r.squared
# Crea il plot
plot(x[, 1], y[, 1],
main = "Scatter Plot",
xlab = corr_results[[1]][i, "Feature1"],
ylab = corr_results[[1]][i, "Feature2"],
cex.lab = 0.75)
abline(model, col = "red")
mtext(paste("R^2:", round(r, 2)), side = 3, line = 0.5, adj = 0)
# Non chiudere il dispositivo dopo ogni plot
}
# Chiudi il dispositivo PDF dopo che tutti i plot sono stati generati
dev.off()
# Computing correlation between Deconvolution features and imaging
corr_method <- "spearman"
imaging = "IMC"
Deconv = "Deconv"
p_value_threshold <- 0.05
low_corr <- -0.5
high_corr <- 0.5
corr_results <- compute_correlation(deconv_path = "/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/03_Deconvolution/Whitout_CD226_and_without_patient3/all_deconvolutions_NSCLC2_TPM_withoutCD226_withoutPatient3.txt",
imaging_path = "/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/01_IF_IMC/IMC_cell_type_densities.csv",
imaging_pattern_to_remove = "",
deconv_pattern_to_remove = "-RNA-01|-RNA-02|-RNA-04|-FIXT-01",
significance_level = p_value_threshold,
low_corr_threshold = low_corr,
high_corr_threshold = high_corr,
cor_type = corr_method,
imaging_type = imaging,
deconv_type = Deconv)
# Apri il dispositivo PDF
pdf(file = paste0(output_folder_deconvolution, "scatterplot_", Deconv, "_vs_", imaging, ".pdf"))
for (i in 1:nrow(corr_results[[1]])) {
# Imposta due plot per pagina
if (i %% 2 == 1 || nrow(corr_results[[1]]) == 1) {  # Apre una nuova pagina se i è dispari o c'è solo un plot
par(mfrow=c(2, 1))
}
# Seleziona i dati per il plot
x <- dplyr::select(corr_results[[6]], corr_results[[1]][i, "Feature1"])
y <- dplyr::select(corr_results[[6]], corr_results[[1]][i, "Feature2"])
# Calcola il modello di regressione lineare e aggiungi la linea di regressione
model <- lm(y[, 1] ~ x[, 1])
# Calcola R^2 e aggiungi il testo al plot
r <- summary(model)$r.squared
# Crea il plot
plot(x[, 1], y[, 1],
main = "Scatter Plot",
xlab = corr_results[[1]][i, "Feature1"],
ylab = corr_results[[1]][i, "Feature2"],
cex.lab = 0.75)
abline(model, col = "red")
mtext(paste("R^2:", round(r, 2)), side = 3, line = 0.5, adj = 0)
# Non chiudere il dispositivo dopo ogni plot
}
# Chiudi il dispositivo PDF dopo che tutti i plot sono stati generati
dev.off()
# Computing correlation between Deconvolution features and imaging
corr_method <- "spearman"
imaging = "IMC"
Deconv = "Deconv"
p_value_threshold <- 0.05
low_corr <- -0.5
high_corr <- 0.5
corr_results <- compute_correlation(deconv_path = "/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/03_Deconvolution/Whitout_CD226_and_without_patient3/all_deconvolutions_NSCLC2_TPM_withoutCD226_withoutPatient3.txt",
imaging_path = "/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/01_IF_IMC/IMC_cell_type_densities.csv",
imaging_pattern_to_remove = "",
deconv_pattern_to_remove = "-RNA-01|-RNA-02|-RNA-04|-FIXT-01",
significance_level = p_value_threshold,
low_corr_threshold = low_corr,
high_corr_threshold = high_corr,
cor_type = corr_method,
imaging_type = imaging,
deconv_type = Deconv)
plot_correlation_matrix(high_corr_pairs = corr_results[[1]],
cor_type = corr_method,
file_name = paste(Deconv, "vs", imaging, sep = "_"),
output_folder = output_folder_deconvolution,
save_png = T,
x_label = imaging,
y_label = Deconv,
significance_level = p_value_threshold,
high_corr_threshold = high_corr,
low_corr_threshold = low_corr)
# Apri il dispositivo PDF
pdf(file = paste0(output_folder_deconvolution, "scatterplot_", Deconv, "_vs_", imaging, ".pdf"))
for (i in 1:nrow(corr_results[[1]])) {
# Imposta due plot per pagina
if (i %% 2 == 1 || nrow(corr_results[[1]]) == 1) {  # Apre una nuova pagina se i è dispari o c'è solo un plot
par(mfrow=c(2, 1))
}
# Seleziona i dati per il plot
x <- dplyr::select(corr_results[[6]], corr_results[[1]][i, "Feature1"])
y <- dplyr::select(corr_results[[6]], corr_results[[1]][i, "Feature2"])
# Calcola il modello di regressione lineare e aggiungi la linea di regressione
model <- lm(y[, 1] ~ x[, 1])
# Calcola R^2 e aggiungi il testo al plot
r <- summary(model)$r.squared
# Crea il plot
plot(x[, 1], y[, 1],
main = "Scatter Plot",
xlab = corr_results[[1]][i, "Feature1"],
ylab = corr_results[[1]][i, "Feature2"],
cex.lab = 0.75)
abline(model, col = "red")
mtext(paste("R^2:", round(r, 2)), side = 3, line = 0.5, adj = 0)
# Non chiudere il dispositivo dopo ogni plot
}
# Chiudi il dispositivo PDF dopo che tutti i plot sono stati generati
dev.off()
pdf(file = paste0(output_folder_deconvolution, "scatterplot_", Deconv, "_vs_", imaging, ".pdf"))
for (i in 1:nrow(corr_results[[1]])) {
# Imposta due plot per pagina
if (i %% 2 == 1 || nrow(corr_results[[1]]) == 1) {  # Apre una nuova pagina se i è dispari o c'è solo un plot
par(mfrow=c(2, 1))
}
# Seleziona i dati per il plot
x <- dplyr::select(corr_results[[6]], corr_results[[1]][i, "Feature1"])
y <- dplyr::select(corr_results[[6]], corr_results[[1]][i, "Feature2"])
# Calcola il modello di regressione lineare e aggiungi la linea di regressione
model <- lm(y[, 1] ~ x[, 1])
# Calcola R^2 e aggiungi il testo al plot
r <- summary(model)$r.squared
# Crea il plot
plot(x[, 1], y[, 1],
main = "Scatter Plot",
xlab = corr_results[[1]][i, "Feature1"],
ylab = corr_results[[1]][i, "Feature2"],
cex.lab = 0.75)
abline(model, col = "red")
mtext(paste("R^2:", round(r, 2)), side = 3, line = 0.5, adj = 0)
# Non chiudere il dispositivo dopo ogni plot
}
# Chiudi il dispositivo PDF dopo che tutti i plot sono stati generati
dev.off()
corr_results <- compute_correlation(deconv_path = "/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/03_Deconvolution/Whitout_CD226_and_without_patient3/all_deconvolutions_NSCLC2_TPM_withoutCD226_withoutPatient3.txt",
imaging_path = "/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/01_IF_IMC/IMC_cell_type_densities.csv",
imaging_pattern_to_remove = "",
deconv_pattern_to_remove = "-RNA-01|-RNA-02|-RNA-04|-FIXT-01",
significance_level = p_value_threshold,
low_corr_threshold = low_corr,
high_corr_threshold = high_corr,
cor_type = corr_method,
imaging_type = imaging,
deconv_type = Deconv)
plot_correlation_matrix(high_corr_pairs = corr_results[[1]],
cor_type = corr_method,
file_name = paste(Deconv, "vs", imaging, sep = "_"),
output_folder = output_folder_deconvolution,
save_png = T,
x_label = imaging,
y_label = Deconv,
significance_level = p_value_threshold,
high_corr_threshold = high_corr,
low_corr_threshold = low_corr)
# Apri il dispositivo PDF
pdf(file = paste0(output_folder_deconvolution, "scatterplot_", Deconv, "_vs_", imaging, ".pdf"))
for (i in 1:nrow(corr_results[[1]])) {
# Imposta due plot per pagina
if (i %% 2 == 1 || nrow(corr_results[[1]]) == 1) {  # Apre una nuova pagina se i è dispari o c'è solo un plot
par(mfrow=c(2, 1))
}
# Seleziona i dati per il plot
x <- dplyr::select(corr_results[[6]], corr_results[[1]][i, "Feature1"])
y <- dplyr::select(corr_results[[6]], corr_results[[1]][i, "Feature2"])
# Calcola il modello di regressione lineare e aggiungi la linea di regressione
model <- lm(y[, 1] ~ x[, 1])
# Calcola R^2 e aggiungi il testo al plot
r <- summary(model)$r.squared
# Crea il plot
plot(x[, 1], y[, 1],
main = "Scatter Plot",
xlab = corr_results[[1]][i, "Feature1"],
ylab = corr_results[[1]][i, "Feature2"],
cex.lab = 0.75)
abline(model, col = "red")
mtext(paste("R^2:", round(r, 2)), side = 3, line = 0.5, adj = 0)
# Non chiudere il dispositivo dopo ogni plot
}
# Chiudi il dispositivo PDF dopo che tutti i plot sono stati generati
dev.off()
corr_method <- "spearman"
imaging = "mIFs"
Deconv = "CellTFusion"
p_value_threshold <- 0.05
low_corr <- -0.5
high_corr <- 0.5
corr_results <- compute_correlation(deconv_path = "/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/04_CellTFusion/Whitout_CD226_and_without_patient3/Deconvolution_after_subgrouping.csv",
imaging_path = "/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/01_IF_IMC/all_IFs_cell_type_fraction.csv",
imaging_pattern_to_remove = "",
deconv_pattern_to_remove = "-RNA-01|-RNA-02|-RNA-04",
significance_level = p_value_threshold,
low_corr_threshold = low_corr,
high_corr_threshold = high_corr,
cor_type = corr_method,
imaging_type = imaging,
deconv_type = Deconv)
plot_correlation_matrix(high_corr_pairs = corr_results[[1]],
cor_type = corr_method,
file_name = paste(Deconv, "vs", imaging, sep = "_"),
output_folder = output_folder_CellTFusion,
save_png = T,
x_label = imaging,
y_label = Deconv,
significance_level = p_value_threshold,
high_corr_threshold = high_corr,
low_corr_threshold = low_corr)
pdf(file = paste0(output_folder_CellTFusion, "scatterplot_", Deconv, "_vs_", imaging, ".pdf"))
for (i in 1:nrow(corr_results[[1]])) {
# Imposta due plot per pagina
if (i %% 2 == 1 || nrow(corr_results[[1]]) == 1) {  # Apre una nuova pagina se i è dispari o c'è solo un plot
par(mfrow=c(2, 1))
}
# Seleziona i dati per il plot
x <- dplyr::select(corr_results[[6]], corr_results[[1]][i, "Feature1"])
y <- dplyr::select(corr_results[[6]], corr_results[[1]][i, "Feature2"])
# Calcola il modello di regressione lineare e aggiungi la linea di regressione
model <- lm(y[, 1] ~ x[, 1])
# Calcola R^2 e aggiungi il testo al plot
r <- summary(model)$r.squared
# Crea il plot
plot(x[, 1], y[, 1],
main = "Scatter Plot",
xlab = corr_results[[1]][i, "Feature1"],
ylab = corr_results[[1]][i, "Feature2"],
cex.lab = 0.75)
abline(model, col = "red")
mtext(paste("R^2:", round(r, 2)), side = 3, line = 0.5, adj = 0)
# Non chiudere il dispositivo dopo ogni plot
}
# Chiudi il dispositivo PDF dopo che tutti i plot sono stati generati
dev.off()
# Computing correlation between CellTFusion Deconvolution features and imaging
corr_method <- "spearman"
imaging = "IMC"
Deconv = "CellTFusion"
p_value_threshold <- 0.05
low_corr <- -0.5
high_corr <- 0.5
corr_results <- compute_correlation(deconv_path = "/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/04_CellTFusion/Whitout_CD226_and_without_patient3/Deconvolution_after_subgrouping.csv",
imaging_path = "/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/01_IF_IMC/IMC_cell_type_densities.csv",
imaging_pattern_to_remove = "",
deconv_pattern_to_remove = "-RNA-01|-RNA-02|-RNA-04|-FIXT-01",
significance_level = p_value_threshold,
low_corr_threshold = low_corr,
high_corr_threshold = high_corr,
cor_type = corr_method,
imaging_type = imaging,
deconv_type = Deconv)
plot_correlation_matrix(high_corr_pairs = corr_results[[1]],
cor_type = corr_method,
file_name = paste(Deconv, "vs", imaging, sep = "_"),
output_folder = output_folder_CellTFusion,
save_png = T,
x_label = imaging,
y_label = Deconv,
significance_level = p_value_threshold,
high_corr_threshold = high_corr,
low_corr_threshold = low_corr)
# Apri il dispositivo PDF
pdf(file = paste0(output_folder_CellTFusion, "scatterplot_", Deconv, "_vs_", imaging, ".pdf"))
for (i in 1:nrow(corr_results[[1]])) {
# Imposta due plot per pagina
if (i %% 2 == 1 || nrow(corr_results[[1]]) == 1) {  # Apre una nuova pagina se i è dispari o c'è solo un plot
par(mfrow=c(2, 1))
}
# Seleziona i dati per il plot
x <- dplyr::select(corr_results[[6]], corr_results[[1]][i, "Feature1"])
y <- dplyr::select(corr_results[[6]], corr_results[[1]][i, "Feature2"])
# Calcola il modello di regressione lineare e aggiungi la linea di regressione
model <- lm(y[, 1] ~ x[, 1])
# Calcola R^2 e aggiungi il testo al plot
r <- summary(model)$r.squared
# Crea il plot
plot(x[, 1], y[, 1],
main = "Scatter Plot",
xlab = corr_results[[1]][i, "Feature1"],
ylab = corr_results[[1]][i, "Feature2"],
cex.lab = 0.75)
abline(model, col = "red")
mtext(paste("R^2:", round(r, 2)), side = 3, line = 0.5, adj = 0)
# Non chiudere il dispositivo dopo ogni plot
}
# Chiudi il dispositivo PDF dopo che tutti i plot sono stati generati
dev.off()
