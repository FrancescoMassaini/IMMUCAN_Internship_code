border = NA)
# Select most important ICs
chosen_IC = c("IC1", "IC8", "IC14", "IC4", "IC13", "IC16", "IC3")
metasample_df_selected <- metasample_df[chosen_IC, , drop = FALSE]
# Plot final SAMPLE heatmap
pheatmap(metasample_df_selected, main = "",
annotation_col = clinical,
color = heatmap_colors,
cluster_cols = TRUE,
cluster_rows = TRUE,
show_colnames = T, show_rownames = T,
fontsize_col = 8, fontsize_row = 8, fontsize = 10, clustering_method = 'complete',
border = NA)
# Prepare the data
# Convert 'metasample_df' into a long format
long_metasample <- as.data.frame(t(metasample_df)) %>%
tibble::rownames_to_column("Sample") %>%
pivot_longer(-Sample, names_to = "IC", values_to = "Value")
# Generate violin plots for each IC for each clinical variable
clinical_vars = colnames(clinical) # List of clinical variables
ICs = unique(long_metasample$IC)
# Aggregate violin plot for each clinical variable
for (clin_var in clinical_vars) {
Wrapped_violin_plot_by_clinical_feature(df_long = long_metasample, metadata_df = clinical, metadata_var = clin_var, facet_wrap_var = "IC")
}
# Specific significant violin plot
for (clin_var in clinical_vars) {
for (IC_value in ICs){
df = long_metasample %>%
dplyr::filter(IC == IC_value) %>%
dplyr::select(Sample, IC, Value)
significant_violin_plot(df_long = df, metadata_df = clinical, metadata_var = clin_var, p_threshold = 0.05, main_title = paste("Significant violin plot for", IC_value))
}
}
# ADImpute to normalize to TPM
TPM_high_variance_genes <- counts_to_TPM(merged_counts_filtered_forClustering_gene_symbol, log = F) %>% # not yet log2 transformed
filter_low_variance_genes(., quantile_threshold = 0.75)
cat("Final nomber of genes: ", nrow(TPM_high_variance_genes))
compute_distribution(data = TPM_high_variance_genes, plot_title = "Distribution of high variance genes - TPM", xlab = "log2(TPM+1)", use_log = T) # log2(x+1)
# Finally convert TPM to log2(TPM+1)
TPM_high_variance_genes = log2(TPM_high_variance_genes+1)
# Load clinical data
clinical = read.csv("../IMMUCAN_data/NSCLC2/01_Clinical_Data/Daniel/NSCLC2_for_R_update_2024.csv") %>%
dplyr::select(immucan_id, stage, death, neo_adjuvant_treatment, adjuvant_treatment, simple_histology, long_survivors, TIL_score, gender, simple_histology) %>%
column_to_rownames(var = "immucan_id")
# Adapt rownames of TPM to clinical ones
TPM_formatted_for_clinical_high_variance = TPM_high_variance_genes
colnames(TPM_formatted_for_clinical_high_variance) = gsub(pattern = "-FIXT.*",
replacement = "",
x = colnames(TPM_formatted_for_clinical_high_variance))
common_samples <- intersect(rownames(clinical), colnames(TPM_formatted_for_clinical_high_variance))
TPM_formatted_for_clinical_high_variance <- TPM_formatted_for_clinical_high_variance %>% dplyr::select(all_of(common_samples))
clinical <- clinical[rownames(clinical) %in% common_samples, ]
# Heatmap on TPM, groups and outliers
# pdf(paste0(output_folder_TPM_outlier, "TPM_samples_heatmap.pdf"), width = 16, height = 16)
Compute_Samples_Heatmap(TPM_formatted_for_clinical_high_variance,  sample_feat_df = clinical, main_title = "Heatmap samples vs samples - Euclidian distance matrix on TPM data")
# dev.off()
# Save the file in the right format for BIODICA INDIPENDENT COMPONENT ANALYSIS (IDA)
TPM_forBIODICA = TPM_formatted_for_clinical_high_variance %>%
rownames_to_column(var = "genes")
# write.table(TPM_forBIODICA, "/home/francesco.massaini/Projects/BIODICA/data/TPM_NSCLC2_Biodica_meanDuplGenes_highly_variable_genes.txt", sep = "\t", row.names = FALSE, col.names = TRUE, quote = FALSE)
TPM = load("../IMMUCAN_data/BC2/02_TPM/BC2_estimated_TPM_fromAndrea.RData")
clinical_all_columns = read.delim("../IMMUCAN_data/BC2/01_Clinical_Data/BC2_clinical_export_20240602.tsv", sep = "\t") %>%
dplyr::filter(immucan_sample_id %in% colnames(TPM)) %>%
dplyr::select(where(~ sum(!is.na(.)) >= 20))
TPM = load("../IMMUCAN_data/BC2/02_TPM/BC2_estimated_TPM_fromAndrea.RData")
clinical_all_columns = read.delim("../IMMUCAN_data/BC2/01_Clinical_Data/BC2_clinical_export_20240602.tsv", sep = "\t") %>%
dplyr::filter(immucan_sample_id %in% colnames(TPM)) %>%
dplyr::select(where(~ sum(!is.na(.)) >= 20))
cat("Numb of samples:", length(unique(clinical_all_columns$immucan_sample_id)) , "\n Not present samples:", setdiff(colnames(TPM_filtered_forClustering), clinical_all_columns$immucan_sample_id))
relevant_clinical_columns = c("immucan_patient_id",
"immucan_sample_id",
"surgery_days_after_diag",
"sampling_days_after_diag",
"lymphocyte_infiltration",
"PCR",
# "medical_review_end_point", # full of "pCR (e.g. surgery)". I'm not sure what is the difference with column PCR, perhaps on different time point?
"medical_review_days_after_diag",
"residual_cancer_burden",
"residual_disease",
# "treatment_setting", # Empty column on the same samples of RNAseq
# "sex", # obviously not so interesting for BC
# "HER2_status", # all negative
# "ER_status", # all negative
# "PR_status", # only 1 patient positive
"KI67_status",
"laterality",
# "disease_evolution", # only three 1 values
"stage",
"N_stage",
# "M_stage", # only cM0 or unknown
"T_stage")
clinical_surv = clinical_all_columns[, c("immucan_patient_id",
"immucan_sample_id",
"surgery_days_after_diag",
"sampling_days_after_diag",
"lymphocyte_infiltration",
"PCR")]
TPM = load("../IMMUCAN_data/BC2/02_TPM/BC2_estimated_TPM_fromAndrea.RData")
clinical_all_columns = read.delim("../IMMUCAN_data/BC2/01_Clinical_Data/BC2_clinical_export_20240602.tsv", sep = "\t") %>%
dplyr::filter(immucan_sample_id %in% colnames(TPM)) %>%
dplyr::select(where(~ sum(!is.na(.)) >= 20))
cat("Numb of samples:", length(unique(clinical_all_columns$immucan_sample_id)) , "\n Not present samples:", setdiff(colnames(TPM), clinical_all_columns$immucan_sample_id))
relevant_clinical_columns = c("immucan_patient_id",
"immucan_sample_id",
"surgery_days_after_diag",
"sampling_days_after_diag",
"lymphocyte_infiltration",
"PCR",
# "medical_review_end_point", # full of "pCR (e.g. surgery)". I'm not sure what is the difference with column PCR, perhaps on different time point?
"medical_review_days_after_diag",
"residual_cancer_burden",
"residual_disease",
# "treatment_setting", # Empty column on the same samples of RNAseq
# "sex", # obviously not so interesting for BC
# "HER2_status", # all negative
# "ER_status", # all negative
# "PR_status", # only 1 patient positive
"KI67_status",
"laterality",
# "disease_evolution", # only three 1 values
"stage",
"N_stage",
# "M_stage", # only cM0 or unknown
"T_stage")
clinical_surv = clinical_all_columns[, c("immucan_patient_id",
"immucan_sample_id",
"surgery_days_after_diag",
"sampling_days_after_diag",
"lymphocyte_infiltration",
"PCR")]
load("../IMMUCAN_data/BC2/02_TPM/BC2_estimated_TPM_fromAndrea.RData")
clinical_all_columns = read.delim("../IMMUCAN_data/BC2/01_Clinical_Data/BC2_clinical_export_20240602.tsv", sep = "\t") %>%
dplyr::filter(immucan_sample_id %in% colnames(gexp)) %>%
dplyr::select(where(~ sum(!is.na(.)) >= 20))
load("../IMMUCAN_data/BC2/02_TPM/BC2_estimated_TPM_fromAndrea.RData")
clinical_all_columns = read.delim("../IMMUCAN_data/BC2/01_Clinical_Data/BC2_clinical_export_20240602.tsv", sep = "\t") %>%
dplyr::filter(immucan_sample_id %in% colnames(gexp_tpm)) %>%
dplyr::select(where(~ sum(!is.na(.)) >= 20))
cat("Numb of samples:", length(unique(clinical_all_columns$immucan_sample_id)) , "\n Not present samples:", setdiff(colnames(gexp_tpm), clinical_all_columns$immucan_sample_id))
relevant_clinical_columns = c("immucan_patient_id",
"immucan_sample_id",
"surgery_days_after_diag",
"sampling_days_after_diag",
"lymphocyte_infiltration",
"PCR",
# "medical_review_end_point", # full of "pCR (e.g. surgery)". I'm not sure what is the difference with column PCR, perhaps on different time point?
"medical_review_days_after_diag",
"residual_cancer_burden",
"residual_disease",
# "treatment_setting", # Empty column on the same samples of RNAseq
# "sex", # obviously not so interesting for BC
# "HER2_status", # all negative
# "ER_status", # all negative
# "PR_status", # only 1 patient positive
"KI67_status",
"laterality",
# "disease_evolution", # only three 1 values
"stage",
"N_stage",
# "M_stage", # only cM0 or unknown
"T_stage")
clinical_surv = clinical_all_columns[, c("immucan_patient_id",
"immucan_sample_id",
"surgery_days_after_diag",
"sampling_days_after_diag",
"lymphocyte_infiltration",
"PCR")]
# Filter clinical with only relevant columns and mutate absent ("") values to NA
clinical = clinical_all_columns[, relevant_clinical_columns] %>%
dplyr::select(-all_of(c("surgery_days_after_diag","sampling_days_after_diag", "immucan_patient_id"))) %>% # remove even immucan_patient_id for better further rapresentations
mutate(PCR = if_else(PCR == "", NA, PCR)) %>%
mutate(stage = if_else(stage == "", NA, stage)) %>%
mutate(lymphocyte_infiltration = if_else(lymphocyte_infiltration == "", NA, lymphocyte_infiltration)) %>%
mutate(lymphocyte_infiltration = if_else(lymphocyte_infiltration == "Not Applicable", "Not applicable", lymphocyte_infiltration)) %>%
mutate(residual_cancer_burden = if_else(residual_cancer_burden == "", NA, residual_cancer_burden)) %>%
mutate(residual_disease = if_else(PCR == "", NA, residual_disease)) %>%
column_to_rownames(var = "immucan_sample_id")
for (feat1 in colnames(clinical)){
clinical_features = colnames(clinical)[colnames(clinical) != feat1]
for (feat2 in clinical_features){
selected = dplyr::select(clinical, feat1 , feat2)
contingency_table = table(selected)
chi_result <- chisq.test(as.matrix(contingency_table))
if (chi_result$p.value < 0.95) {
print(paste(feat2, chi_result$p.value))
print(contingency_table)
mosaicplot(contingency_table + 0.1,
main = "Mosaic plot",
sub = paste("P-value:", format(chi_result$p.value, digits = 2)),
color = TRUE
)
} else{
cat(feat2, "No Significance\n")
}
}
}
for (feat1 in colnames(clinical)){
clinical_features = colnames(clinical)[colnames(clinical) != feat1]
for (feat2 in clinical_features){
selected = dplyr::select(clinical, feat1 , feat2)
contingency_table = table(selected)
chi_result <- chisq.test(as.matrix(contingency_table))
if (!is.na(chi_result$p.value) && chi_result$p.value < 0.95) {
print(paste(feat2, chi_result$p.value))
print(contingency_table)
mosaicplot(contingency_table + 0.1,
main = "Mosaic plot",
sub = paste("P-value:", format(chi_result$p.value, digits = 2)),
color = TRUE
)
} else{
cat(feat2, "No Significance\n")
}
}
}
clinical_filtered = clinical %>%
dplyr::filter(PCR != "Unknown")
specific_contingency = table(clinical$laterality, clinical$PCR)
View(specific_contingency)
specific_contingency = table(clinical[,laterality], clinical[,PCR])
specific_contingency = table(clinical[,"laterality"], clinical[,"PCR"])
View(specific_contingency)
colnames(specific_contingency) = c("laterality", "PCR")
View(specific_contingency)
colnames(specific_contingency) = c("laterality", "PCR", "Freq")
mosaicplot(specific_contingency + 0.1,
main = "Mosaic plot",
sub = paste("P-value:", format(chi_result$p.value, digits = 2)),
color = TRUE
)
clinical_filtered = clinical %>%
dplyr::filter(PCR != "Unknown")
specific_contingency = table(clinical[,"laterality"], clinical[,"PCR"])
colnames(specific_contingency) = c("laterality", "PCR", "Freq")
mosaicplot(specific_contingency + 0.1,
main = "Mosaic plot",
sub = paste("P-value:"),
color = TRUE
)
clinical_filtered = clinical %>%
dplyr::filter(PCR != "Unknown")
specific_contingency = table(clinical[,"laterality"], clinical[,"PCR"])
colnames(specific_contingency) = c("laterality", "PCR", "Freq")
chi_result_specific <- chisq.test(as.matrix(specific_contingency))
mosaicplot(specific_contingency + 0.1,
main = "Mosaic plot",
sub = paste("P-value:", format(chi_result_specific$p.value, digits = 2)),
color = TRUE
)
load("../IMMUCAN_data/BC2/02_TPM/BC2_estimated_TPM_fromAndrea.RData")
clinical_all_columns = read.delim("../IMMUCAN_data/BC2/01_Clinical_Data/BC2_clinical_export_20240602.tsv", sep = "\t") %>%
dplyr::filter(immucan_sample_id %in% colnames(gexp_tpm)) %>%
dplyr::select(where(~ sum(!is.na(.)) >= 20))
cat("Numb of samples:", length(unique(clinical_all_columns$immucan_sample_id)) , "\n Not present samples:", setdiff(colnames(gexp_tpm), clinical_all_columns$immucan_sample_id))
relevant_clinical_columns = c("immucan_patient_id",
"immucan_sample_id",
"surgery_days_after_diag",
"sampling_days_after_diag",
"lymphocyte_infiltration",
"PCR",
# "medical_review_end_point", # full of "pCR (e.g. surgery)". I'm not sure what is the difference with column PCR, perhaps on different time point?
# "medical_review_days_after_diag",
"residual_cancer_burden",
"residual_disease",
# "treatment_setting", # Empty column on the same samples of RNAseq
# "sex", # obviously not so interesting for BC
# "HER2_status", # all negative
# "ER_status", # all negative
# "PR_status", # only 1 patient positive
"KI67_status",
"laterality",
# "disease_evolution", # only three 1 values
"stage",
"N_stage",
# "M_stage", # only cM0 or unknown
"T_stage")
clinical_surv = clinical_all_columns[, c("immucan_sample_id",
"surgery_days_after_diag",
"sampling_days_after_diag",
"lymphocyte_infiltration",
"medical_review_end_point", # full of "pCR (e.g. surgery)" and they don't match PCR column. I'm not sure what is the difference with column PCR, perhaps on different time point?
"medical_review_days_after_diag")]
# Filter clinical with only relevant columns and mutate absent ("") values to NA
clinical = clinical_all_columns[, relevant_clinical_columns] %>%
dplyr::select(-all_of(c("surgery_days_after_diag","sampling_days_after_diag", "immucan_patient_id"))) %>% # remove even immucan_patient_id for better further rapresentations
mutate(PCR = if_else(PCR == "", NA, PCR)) %>%
mutate(stage = if_else(stage == "", NA, stage)) %>%
mutate(lymphocyte_infiltration = if_else(lymphocyte_infiltration == "", NA, lymphocyte_infiltration)) %>%
mutate(lymphocyte_infiltration = if_else(lymphocyte_infiltration == "Not Applicable", "Not applicable", lymphocyte_infiltration)) %>%
mutate(residual_cancer_burden = if_else(residual_cancer_burden == "", NA, residual_cancer_burden)) %>%
mutate(residual_disease = if_else(PCR == "", NA, residual_disease)) %>%
column_to_rownames(var = "immucan_sample_id")
clinical_all_columns = read.delim("../IMMUCAN_data/BC2/01_Clinical_Data/BC2_clinical_export_20240602.tsv", sep = "\t") %>%
dplyr::filter(immucan_sample_id %in% colnames(gexp_tpm)) %>%
dplyr::select(where(~ sum(!is.na(.)) >= 20))
clinical_surv = clinical_all_columns[, c("immucan_sample_id",
"surgery_days_after_diag",
"sampling_days_after_diag",
"lymphocyte_infiltration",
"medical_review_end_point", # full of "pCR (e.g. surgery)" and they don't match PCR column. I'm not sure what is the difference with column PCR, perhaps on different time point?
"medical_review_days_after_diag",
"PCR",
"lymphocyte_infiltration",
"stage",
"residual_cancer_burden",
"residual_disease")]
# Filter clinical with only relevant columns and mutate absent ("") values to NA
clinical_km = clinical_all_columns[, clinical_surv] %>%
mutate(PCR = if_else(PCR == "", NA, PCR)) %>%
mutate(stage = if_else(stage == "", NA, stage)) %>%
mutate(lymphocyte_infiltration = if_else(lymphocyte_infiltration == "", NA, lymphocyte_infiltration)) %>%
mutate(lymphocyte_infiltration = if_else(lymphocyte_infiltration == "Not Applicable", "Not applicable", lymphocyte_infiltration)) %>%
mutate(residual_cancer_burden = if_else(residual_cancer_burden == "", NA, residual_cancer_burden)) %>%
mutate(residual_disease = if_else(PCR == "", NA, residual_disease)) %>%
column_to_rownames(var = "immucan_sample_id")
clinical_all_columns = read.delim("../IMMUCAN_data/BC2/01_Clinical_Data/BC2_clinical_export_20240602.tsv", sep = "\t") %>%
dplyr::filter(immucan_sample_id %in% colnames(gexp_tpm)) %>%
dplyr::select(where(~ sum(!is.na(.)) >= 20))
clinical_surv = clinical_all_columns[, c("immucan_sample_id",
"surgery_days_after_diag",
"sampling_days_after_diag",
"medical_review_end_point", # full of "pCR (e.g. surgery)" and they don't match PCR column. I'm not sure what is the difference with column PCR, perhaps on different time point?
"medical_review_days_after_diag",
"PCR",
"lymphocyte_infiltration",
"stage",
"residual_cancer_burden",
"residual_disease")]
# Filter clinical with only relevant columns and mutate absent ("") values to NA
clinical_km = clinical_all_columns[, clinical_surv] %>%
mutate(PCR = if_else(PCR == "", NA, PCR)) %>%
mutate(stage = if_else(stage == "", NA, stage)) %>%
mutate(lymphocyte_infiltration = if_else(lymphocyte_infiltration == "", NA, lymphocyte_infiltration)) %>%
mutate(lymphocyte_infiltration = if_else(lymphocyte_infiltration == "Not Applicable", "Not applicable", lymphocyte_infiltration)) %>%
mutate(residual_cancer_burden = if_else(residual_cancer_burden == "", NA, residual_cancer_burden)) %>%
mutate(residual_disease = if_else(PCR == "", NA, residual_disease)) %>%
column_to_rownames(var = "immucan_sample_id")
View(clinical_surv)
clinical_all_columns = read.delim("../IMMUCAN_data/BC2/01_Clinical_Data/BC2_clinical_export_20240602.tsv", sep = "\t") %>%
dplyr::filter(immucan_sample_id %in% colnames(gexp_tpm)) %>%
dplyr::select(where(~ sum(!is.na(.)) >= 20))
clinical_surv = clinical_all_columns[, c("immucan_sample_id",
"surgery_days_after_diag",
"sampling_days_after_diag",
"medical_review_end_point", # full of "pCR (e.g. surgery)" and they don't match PCR column. I'm not sure what is the difference with column PCR, perhaps on different time point?
"medical_review_days_after_diag",
"PCR",
"lymphocyte_infiltration",
"stage",
"residual_cancer_burden",
"residual_disease")]
# Filter clinical with only relevant columns and mutate absent ("") values to NA
clinical_surv = clinical_surv %>%
mutate(PCR = if_else(PCR == "", NA, PCR)) %>%
mutate(stage = if_else(stage == "", NA, stage)) %>%
mutate(lymphocyte_infiltration = if_else(lymphocyte_infiltration == "", NA, lymphocyte_infiltration)) %>%
mutate(lymphocyte_infiltration = if_else(lymphocyte_infiltration == "Not Applicable", "Not applicable", lymphocyte_infiltration)) %>%
mutate(residual_cancer_burden = if_else(residual_cancer_burden == "", NA, residual_cancer_burden)) %>%
mutate(residual_disease = if_else(PCR == "", NA, residual_disease)) %>%
column_to_rownames(var = "immucan_sample_id")
km_trt_fit <- survfit(Surv(time_to_event, death) ~ 1, data=clinical)
km_trt_fit <- survfit(Surv(medical_review_days_after_diag, medical_review_end_point) ~ 1, data=clinical)
km_trt_fit <- survfit(Surv(medical_review_days_after_diag, medical_review_end_point) ~ 1, data=clinical_surv)
# Filter clinical with only relevant columns and mutate absent ("") values to NA
clinical_surv = clinical_surv %>%
mutate(PCR = if_else(PCR == "", NA, PCR)) %>%
mutate(stage = if_else(stage == "", NA, stage)) %>%
mutate(lymphocyte_infiltration = if_else(lymphocyte_infiltration == "", NA, lymphocyte_infiltration)) %>%
mutate(lymphocyte_infiltration = if_else(lymphocyte_infiltration == "Not Applicable", "Not applicable", lymphocyte_infiltration)) %>%
mutate(residual_cancer_burden = if_else(residual_cancer_burden == "", NA, residual_cancer_burden)) %>%
mutate(residual_disease = if_else(PCR == "", NA, residual_disease)) %>%
mutate(medical_review_end_point_logical = if_else(medical_review_end_point == "pCR (e.g. surgery)", TRUE, FALSE))
clinical_surv = clinical_all_columns[, c("immucan_sample_id",
"surgery_days_after_diag",
"sampling_days_after_diag",
"medical_review_end_point", # full of "pCR (e.g. surgery)" and they don't match PCR column. I'm not sure what is the difference with column PCR, perhaps on different time point?
"medical_review_days_after_diag",
"PCR",
"lymphocyte_infiltration",
"stage",
"residual_cancer_burden",
"residual_disease")]
# Filter clinical with only relevant columns and mutate absent ("") values to NA
clinical_surv = clinical_surv %>%
mutate(PCR = if_else(PCR == "", NA, PCR)) %>%
mutate(stage = if_else(stage == "", NA, stage)) %>%
mutate(lymphocyte_infiltration = if_else(lymphocyte_infiltration == "", NA, lymphocyte_infiltration)) %>%
mutate(lymphocyte_infiltration = if_else(lymphocyte_infiltration == "Not Applicable", "Not applicable", lymphocyte_infiltration)) %>%
mutate(residual_cancer_burden = if_else(residual_cancer_burden == "", NA, residual_cancer_burden)) %>%
mutate(residual_disease = if_else(PCR == "", NA, residual_disease)) %>%
mutate(medical_review_end_point_logical = if_else(medical_review_end_point == "pCR (e.g. surgery)", TRUE, FALSE)) %>%
column_to_rownames(var = "immucan_sample_id")
km_trt_fit <- survfit(Surv(medical_review_days_after_diag, medical_review_end_point_logical) ~ 1, data=clinical_surv)
autoplot(km_trt_fit)
clinical_all_columns = read.delim("../IMMUCAN_data/BC2/01_Clinical_Data/BC2_clinical_export_20240602.tsv", sep = "\t") %>%
dplyr::filter(immucan_sample_id %in% colnames(gexp_tpm)) %>%
dplyr::select(where(~ sum(!is.na(.)) >= 20))
clinical_surv = clinical_all_columns[, c("immucan_sample_id",
"surgery_days_after_diag",
"sampling_days_after_diag",
"medical_review_end_point", # full of "pCR (e.g. surgery)" and they don't match PCR column. I'm not sure what is the difference with column PCR, perhaps on different time point?
"medical_review_days_after_diag",
"PCR",
"lymphocyte_infiltration",
"stage",
"residual_cancer_burden",
"residual_disease")]
# Filter clinical with only relevant columns and mutate absent ("") values to NA
clinical_surv = clinical_surv %>%
mutate(PCR = if_else(PCR == "", NA, PCR)) %>%
mutate(stage = if_else(stage == "", NA, stage)) %>%
mutate(lymphocyte_infiltration = if_else(lymphocyte_infiltration == "", NA, lymphocyte_infiltration)) %>%
mutate(lymphocyte_infiltration = if_else(lymphocyte_infiltration == "Not Applicable", "Not applicable", lymphocyte_infiltration)) %>%
mutate(residual_cancer_burden = if_else(residual_cancer_burden == "", NA, residual_cancer_burden)) %>%
mutate(residual_disease = if_else(PCR == "", NA, residual_disease)) %>%
mutate(medical_review_end_point_logical = if_else(medical_review_end_point == "pCR (e.g. surgery)", TRUE, FALSE)) %>%
column_to_rownames(var = "immucan_sample_id")
km_trt_fit <- survfit(Surv(medical_review_days_after_diag, medical_review_end_point_logical) ~ 1, data=clinical_surv)
autoplot(km_trt_fit)
km_trt_fit <- survfit(Surv(medical_review_days_after_diag, medical_review_end_point_logical) ~ PCR, data=clinical_surv)
autoplot(km_trt_fit)
km_trt_fit <- survfit(Surv(medical_review_days_after_diag, medical_review_end_point_logical) ~ PCR, data=clinical_surv)
library(survminer)
install.packages("survminer")
View(km_trt_fit)
km_trt_fit <- survfit(Surv(medical_review_days_after_diag, medical_review_end_point_logical) ~ PCR, data=clinical_surv)
library(survminer)
ggsurvplot(
km_trt_fit,                      # modello survfit
data = clinical_surv,            # dataset
pval = TRUE,                     # mostra il p-value del test log-rank
conf.int = TRUE,                 # mostra l'intervallo di confidenza
palette = c("#E7B800", "#2E9FDF"),  # colori delle linee
risk.table = TRUE                # aggiunge una tabella dei rischi
)
km_trt_fit <- survfit(Surv(medical_review_days_after_diag, medical_review_end_point_logical) ~ lymphocyte_infiltration, data=clinical_surv)
autoplot(km_trt_fit)
km_trt_fit <- survfit(Surv(medical_review_days_after_diag, PCR) ~ lymphocyte_infiltration, data=clinical_surv)
km_trt_fit <- survfit(Surv(medical_review_days_after_diag, as.logical(PCR)) ~ lymphocyte_infiltration, data=clinical_surv)
autoplot(km_trt_fit)
km_trt_fit <- survfit(Surv(medical_review_days_after_diag, as.logical(PCR)) ~ lymphocyte_infiltration, data=clinical_surv)
km_trt_fit <- survfit(Surv(medical_review_days_after_diag, as.logical(na.omit(PCR))) ~ lymphocyte_infiltration, data=clinical_surv)
clinical_surv = na.omit(clinical_surv)
km_trt_fit <- survfit(Surv(medical_review_days_after_diag, as.logical(PCR)) ~ lymphocyte_infiltration, data=clinical_surv)
clinical_all_columns = read.delim("../IMMUCAN_data/BC2/01_Clinical_Data/BC2_clinical_export_20240602.tsv", sep = "\t") %>%
dplyr::filter(immucan_sample_id %in% colnames(gexp_tpm)) %>%
dplyr::select(where(~ sum(!is.na(.)) >= 20))
clinical_surv = clinical_all_columns[, c("immucan_sample_id",
"surgery_days_after_diag",
"sampling_days_after_diag",
"medical_review_end_point", # full of "pCR (e.g. surgery)" and they don't match PCR column. I'm not sure what is the difference with column PCR, perhaps on different time point?
"medical_review_days_after_diag",
"PCR",
"lymphocyte_infiltration",
"stage",
"residual_cancer_burden",
"residual_disease")]
# Filter clinical with only relevant columns and mutate absent ("") values to NA
clinical_surv = clinical_surv %>%
mutate(PCR = if_else(PCR == "", NA, PCR)) %>%
mutate(stage = if_else(stage == "", NA, stage)) %>%
mutate(lymphocyte_infiltration = if_else(lymphocyte_infiltration == "", NA, lymphocyte_infiltration)) %>%
mutate(lymphocyte_infiltration = if_else(lymphocyte_infiltration == "Not Applicable", "Not applicable", lymphocyte_infiltration)) %>%
mutate(residual_cancer_burden = if_else(residual_cancer_burden == "", NA, residual_cancer_burden)) %>%
mutate(residual_disease = if_else(PCR == "", NA, residual_disease)) %>%
mutate(medical_review_end_point_logical = if_else(medical_review_end_point == "pCR (e.g. surgery)", TRUE, FALSE)) %>%
column_to_rownames(var = "immucan_sample_id")
clinical_all_columns = read.delim("../IMMUCAN_data/BC2/01_Clinical_Data/BC2_clinical_export_20240602.tsv", sep = "\t") %>%
dplyr::filter(immucan_sample_id %in% colnames(gexp_tpm)) %>%
dplyr::select(where(~ sum(!is.na(.)) >= 20))
clinical_surv = clinical_all_columns[, c("immucan_sample_id",
"surgery_days_after_diag",
"sampling_days_after_diag",
"medical_review_end_point", # full of "pCR (e.g. surgery)" and they don't match PCR column. I'm not sure what is the difference with column PCR, perhaps on different time point?
"medical_review_days_after_diag",
"PCR",
"lymphocyte_infiltration",
"stage",
"residual_cancer_burden",
"residual_disease")]
# Filter clinical with only relevant columns and mutate absent ("") values to NA
clinical_surv = clinical_surv %>%
mutate(PCR = if_else(PCR == "", NA, PCR)) %>%
mutate(PCR = if_else(PCR == "Unknown", NA, PCR)) %>%
mutate(stage = if_else(stage == "", NA, stage)) %>%
mutate(lymphocyte_infiltration = if_else(lymphocyte_infiltration == "", NA, lymphocyte_infiltration)) %>%
mutate(lymphocyte_infiltration = if_else(lymphocyte_infiltration == "Not Applicable", "Not applicable", lymphocyte_infiltration)) %>%
mutate(residual_cancer_burden = if_else(residual_cancer_burden == "", NA, residual_cancer_burden)) %>%
mutate(residual_disease = if_else(PCR == "", NA, residual_disease)) %>%
mutate(medical_review_end_point_logical = if_else(medical_review_end_point == "pCR (e.g. surgery)", TRUE, FALSE)) %>%
column_to_rownames(var = "immucan_sample_id")
km_trt_fit <- survfit(Surv(medical_review_days_after_diag, medical_review_end_point_logical) ~ 1, data=clinical_surv)
autoplot(km_trt_fit)
km_trt_fit <- survfit(Surv(medical_review_days_after_diag, medical_review_end_point_logical) ~ PCR, data=clinical_surv)
library(survminer)
ggsurvplot(
km_trt_fit,                      # modello survfit
data = clinical_surv,            # dataset
pval = TRUE,                     # mostra il p-value del test log-rank
conf.int = TRUE,                 # mostra l'intervallo di confidenza
palette = c("#E7B800", "#2E9FDF"),  # colori delle linee
risk.table = TRUE                # aggiunge una tabella dei rischi
)
clinical_surv = na.omit(clinical_surv)
km_trt_fit <- survfit(Surv(medical_review_days_after_diag, as.logical(PCR)) ~ lymphocyte_infiltration, data=clinical_surv)
km_trt_fit <- survfit(Surv(medical_review_days_after_diag, medical_review_end_point_logical) ~ stage, data=clinical_surv)
autoplot(km_trt_fit)
km_trt_fit <- survfit(Surv(medical_review_days_after_diag, medical_review_end_point_logical) ~ residual_disease, data=clinical_surv)
autoplot(km_trt_fit)
km_trt_fit <- survfit(Surv(medical_review_days_after_diag, medical_review_end_point_logical) ~ lymphocyte_infiltration, data=clinical_surv)
autoplot(km_trt_fit)
