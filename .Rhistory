}
}
deconvolution = deconv_common.fixed
deconvolution = deconv_common.fixed
deconv = deconvolution[,grep(paste0(c("B.cells", "CD4.cells", "CD8.cells"),collapse = "|"), colnames(deconvolution))]
View(deconv)
methods = unlist(strsplit(colnames(deconv), paste0(c("B.cells", "CD4.cells", "CD8.cells"), collapse = "|"))) #Extract methods-signatures containing B CD4 CD8
grep(paste0(c("B.cells", "CD4.cells", "CD8.cells"),collapse = "|"), colnames(deconvolution))
indices = grep(paste0(c("B.cells", "CD4.cells", "CD8.cells"),collapse = "|"), colnames(deconvolution))
deconv = deconvolution[,indices]
methods = unlist(strsplit(colnames(deconv), paste0(c("B.cells", "CD4.cells", "CD8.cells"), collapse = "|"))) #Extract methods-signatures containing B CD4 CD8
deconvolution = deconv_common.fixed
indices = grep(paste0(c("B.cells", "CD4.cells", "CD8.cells"),collapse = "|"), colnames(deconvolution))
deconv = deconvolution[,indices]
methods = unlist(strsplit(colnames(deconv), paste0(c("B.cells", "CD4.cells", "CD8.cells"), collapse = "|"))) #Extract methods-signatures containing B CD4 CD8
for (j in 1:lenght(methods)){
for (n in 1:lenght(methods)){
if (methods[j] == methods[n]) sum = rowsum(deconv[j], deconv[n])
}
}
deconvolution = deconv_common.fixed
indices = grep(paste0(c("B.cells", "CD4.cells", "CD8.cells"),collapse = "|"), colnames(deconvolution))
deconv = deconvolution[,indices]
methods = unlist(strsplit(colnames(deconv), paste0(c("B.cells", "CD4.cells", "CD8.cells"), collapse = "|"))) #Extract methods-signatures containing B CD4 CD8
for (j in 1:length(methods)){
for (n in 1:length(methods)){
if (methods[j] == methods[n]) sum = rowsum(deconv[j], deconv[n])
}
}
deconvolution = deconv_common.fixed
indices = grep(paste0(c("B.cells", "CD4.cells", "CD8.cells"),collapse = "|"), colnames(deconvolution))
deconv = deconvolution[,indices]
methods = unlist(strsplit(colnames(deconv), paste0(c("B.cells", "CD4.cells", "CD8.cells"), collapse = "|"))) #Extract methods-signatures containing B CD4 CD8
for (j in 1:length(methods)){
for (n in 1:length(methods)){
if (methods[j] == methods[n]) sum = rowsum(deconv[j], deconv[n])
}
}
deconvolution = deconv_common.fixed
indices = grep(paste0(c("B.cells", "CD4.cells", "CD8.cells"),collapse = "|"), colnames(deconvolution))
deconv = deconvolution[,indices]
methods = unlist(strsplit(colnames(deconv), paste0(c("B.cells", "CD4.cells", "CD8.cells"), collapse = "|"))) #Extract methods-signatures containing B CD4 CD8
for (j in 1:length(methods)){
for (n in 1:length(methods)){
if (methods[j] == methods[n]) sum = rowsum(deconv[,j], deconv[,n])
}
}
View(sum)
deconvolution = deconv_common.fixed
indices = grep(paste0(c("B.cells", "CD4.cells", "CD8.cells"),collapse = "|"), colnames(deconvolution))
deconv = deconvolution[,indices]
methods = unlist(strsplit(colnames(deconv), paste0(c("B.cells", "CD4.cells", "CD8.cells"), collapse = "|"))) #Extract methods-signatures containing B CD4 CD8
for (j in 1:length(methods)){
for (n in 1:length(methods)){
if (methods[j] == methods[n]) sum = data.frame("sum" = c(rowsum(deconv[,j], deconv[,n]))
}
deconvolution = deconv_common.fixed
deconvolution = deconv_common.fixed
indices = grep(paste0(c("B.cells", "CD4.cells", "CD8.cells"),collapse = "|"), colnames(deconvolution))
deconv = deconvolution[,indices]
methods = unlist(strsplit(colnames(deconv), paste0(c("B.cells", "CD4.cells", "CD8.cells"), collapse = "|"))) #Extract methods-signatures containing B CD4 CD8
for (j in 1:length(methods)){
for (n in 1:length(methods)){
if (methods[j] == methods[n]) sum = data.frame("sum" = c(rowsum(deconv[,j], deconv[,n])))
}
}
deconvolution = deconv_common.fixed
indices = grep(paste0(c("B.cells", "CD4.cells", "CD8.cells"),collapse = "|"), colnames(deconvolution))
deconv = deconvolution[,indices]
methods = unlist(strsplit(colnames(deconv), paste0(c("B.cells", "CD4.cells", "CD8.cells"), collapse = "|"))) #Extract methods-signatures containing B CD4 CD8
for (j in 1:length(methods)){
for (n in 1:length(methods)){
if (methods[j] == methods[n]) sum = data.frame("sum" = c(rowsum(deconv[,j], deconv[,n])), row.names = rownames(deconv))
}
}
deconvolution = deconv_common.fixed
indices = grep(paste0(c("B.cells", "CD4.cells", "CD8.cells"),collapse = "|"), colnames(deconvolution))
deconv = deconvolution[,indices]
methods = unlist(strsplit(colnames(deconv), paste0(c("B.cells", "CD4.cells", "CD8.cells"), collapse = "|"))) #Extract methods-signatures containing B CD4 CD8
for (j in 1:length(methods)){
for (n in 1:length(methods)){
if (methods[j] == methods[n]) sum = data.frame("sum" = c(rowsum(deconv[,j], deconv[,n])))
}
}
View(sum)
deconv[,j]
deconv[,n]
j
n
methods[j]
methods[n]
deconvolution = deconv_common.fixed
indices = grep(paste0(c("B.cells", "CD4.cells", "CD8.cells"),collapse = "|"), colnames(deconvolution))
deconv = deconvolution[,indices]
methods = unlist(strsplit(colnames(deconv), paste0(c("B.cells", "CD4.cells", "CD8.cells"), collapse = "|"))) #Extract methods-signatures containing B CD4 CD8
for (j in 1:length(methods)){
for (n in 1:length(methods)){
if (methods[j] == methods[n]) sum = data.frame("sum" = c(rowsum(deconv[,j], deconv[,n])))
}
}
deconvolution = deconv_common.fixed
indices = grep(paste0(c("B.cells", "CD4.cells", "CD8.cells"),collapse = "|"), colnames(deconvolution))
deconv = deconvolution[,indices]
methods = unlist(strsplit(colnames(deconv), paste0(c("B.cells", "CD4.cells", "CD8.cells"), collapse = "|"))) #Extract methods-signatures containing B CD4 CD8
for (j in 1:length(methods)){
for (n in 1:length(methods)){
if (methods[j] == methods[n]) sum = data.frame("sum" = c(rowSums(deconv[,j], deconv[,n])))
}
}
deconvolution = deconv_common.fixed
indices = grep(paste0(c("B.cells", "CD4.cells", "CD8.cells"),collapse = "|"), colnames(deconvolution))
deconv = deconvolution[,indices]
methods = unlist(strsplit(colnames(deconv), paste0(c("B.cells", "CD4.cells", "CD8.cells"), collapse = "|"))) #Extract methods-signatures containing B CD4 CD8
for (j in 1:length(methods)){
for (n in 1:length(methods)){
if (methods[j] == methods[n]) sum = data.frame("sum" = c(deconv[,j] + deconv[,n]))
}
}
indices = grep(paste0(c("B.cells", "CD4.cells", "CD8.cells"),collapse = "|"), colnames(deconvolution))
deconv = deconvolution[,indices]
methods = unlist(strsplit(colnames(deconv), paste0(c("B.cells", "CD4.cells", "CD8.cells"), collapse = "|"))) #Extract methods-signatures containing B CD4 CD8
for (j in 1:length(methods)){
for (n in 1:length(methods)){
if (methods[j] == methods[n]) sum = data.frame(paste0(methods[j],"_BnT") = c(deconv[,j] + deconv[,n]))
rename
imaging_method = "IMC"
Deconv_method = "Deconv"
corr_method <- "spearman"
imaging = read.csv("/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/01_IF_IMC/IMC_cell_type_densities.csv", row.names = 1)
imaging = imaging[,-1]
imaging = imaging %>%
rename("B" = "B.cells",
"CD4" = "CD4.cells",
"CD8" = "CD8.cells",
"pDC" = "Dendritic.resting",
"MacCD163" = "Macrophages.cells",
"NK" = "NK.cells",
"Treg" = "T.cells.regulatory",
"Tumor" = "Cancer",
"plasma" = "Plasma")
source('~/CellTFusion/src/cell_deconvolution.R')
deconv = read.delim("/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/03_Deconvolution/Whitout_CD226_and_without_patient3/all_deconvolutions_NSCLC2_TPM_withoutCD226_withoutPatient3.txt", header = 1, row.names = 1)
rownames(deconv) <- str_remove_all(string = rownames(deconv), pattern = "-RNA-01|-RNA-02|-RNA-04|-FIXT-01")
common_patients <- intersect(rownames(deconv), rownames(imaging))
# Subset the data for common patients
imaging_common <- imaging[common_patients,]
deconv_common <- deconv[common_patients, ]
deconv_common.fixed = fix.names.GEMDeCan(deconv_common)
source('~/Downloads/pseudobulk_function.R')
imaging_method = "IMC"
Deconv_method = "Deconv"
corr_method <- "spearman"
imaging = read.csv("/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/01_IF_IMC/IMC_cell_type_densities.csv", row.names = 1)
imaging = imaging[,-1]
imaging = imaging %>%
rename("B" = "B.cells",
"CD4" = "CD4.cells",
"CD8" = "CD8.cells",
"pDC" = "Dendritic.resting",
"MacCD163" = "Macrophages.cells",
"NK" = "NK.cells",
"Treg" = "T.cells.regulatory",
"Tumor" = "Cancer",
"plasma" = "Plasma")
source('~/CellTFusion/src/cell_deconvolution.R')
deconv = read.delim("/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/03_Deconvolution/Whitout_CD226_and_without_patient3/all_deconvolutions_NSCLC2_TPM_withoutCD226_withoutPatient3.txt", header = 1, row.names = 1)
rownames(deconv) <- str_remove_all(string = rownames(deconv), pattern = "-RNA-01|-RNA-02|-RNA-04|-FIXT-01")
common_patients <- intersect(rownames(deconv), rownames(imaging))
# Subset the data for common patients
imaging_common <- imaging[common_patients,]
deconv_common <- deconv[common_patients, ]
deconv_common.fixed = fix.names.GEMDeCan(deconv_common)
source('~/Downloads/pseudobulk_function.R')
benchmarking_deconvolution(deconvolution = deconv_common.fixed, groundtruth = imaging_common, corr_type = corr_method, file_name = paste0("correlation_", Deconv_method, "_vs_", imaging_method, "_", corr_method), scatter = TRUE, imaging_type = imaging_method)
imaging_method = "IMC"
Deconv_method = "Deconv"
corr_method <- "spearman"
imaging = read.csv("/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/01_IF_IMC/IMC_cell_type_densities.csv", row.names = 1)
imaging = imaging[,-1]
imaging = imaging %>%
rename("B" = "B.cells",
"CD4" = "CD4.cells",
"CD8" = "CD8.cells",
"DC" = "Dendritic.cells",
"MacCD163" = "Macrophages.cells",
"NK" = "NK.cells",
"Treg" = "T.cells.regulatory",
"Tumor" = "Cancer",
"plasma" = "Plasma")
source('~/CellTFusion/src/cell_deconvolution.R')
deconv = read.delim("/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/03_Deconvolution/Whitout_CD226_and_without_patient3/all_deconvolutions_NSCLC2_TPM_withoutCD226_withoutPatient3.txt", header = 1, row.names = 1)
rownames(deconv) <- str_remove_all(string = rownames(deconv), pattern = "-RNA-01|-RNA-02|-RNA-04|-FIXT-01")
common_patients <- intersect(rownames(deconv), rownames(imaging))
# Subset the data for common patients
imaging_common <- imaging[common_patients,]
deconv_common <- deconv[common_patients, ]
deconv_common.fixed = fix.names.GEMDeCan(deconv_common)
source('~/Downloads/pseudobulk_function.R')
benchmarking_deconvolution(deconvolution = deconv_common.fixed, groundtruth = imaging_common, corr_type = corr_method, file_name = paste0("correlation_", Deconv_method, "_vs_", imaging_method, "_", corr_method), scatter = TRUE, imaging_type = imaging_method)
imaging_method = "IMC"
Deconv_method = "Deconv"
corr_method <- "spearman"
imaging = read.csv("/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/01_IF_IMC/IMC_cell_type_densities.csv", row.names = 1)
imaging = imaging[,-1]
imaging = imaging %>%
rename("B" = "B.cells",
"CD4" = "CD4.cells",
"CD8" = "CD8.cells",
"DC" = "Dendritic.cells",
"MacCD163" = "Macrophages.cells",
"NK" = "NK.cells",
"Treg" = "T.cells.regulatory",
"Tumor" = "Cancer",
"plasma" = "Plasma")
source('~/CellTFusion/src/cell_deconvolution.R')
deconv = read.delim("/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/03_Deconvolution/Whitout_CD226_and_without_patient3/all_deconvolutions_NSCLC2_TPM_withoutCD226_withoutPatient3.txt", header = 1, row.names = 1)
rownames(deconv) <- str_remove_all(string = rownames(deconv), pattern = "-RNA-01|-RNA-02|-RNA-04|-FIXT-01")
common_patients <- intersect(rownames(deconv), rownames(imaging))
# Subset the data for common patients
imaging_common <- imaging[common_patients,]
deconv_common <- deconv[common_patients, ]
deconv_common.fixed = fix.names.GEMDeCan(deconv_common)
source('~/Downloads/pseudobulk_function.R')
benchmarking_deconvolution(deconvolution = deconv_common.fixed, groundtruth = imaging_common, corr_type = corr_method, file_name = paste0("correlation_", Deconv_method, "_vs_", imaging_method, "_", corr_method), scatter = TRUE, imaging_type = imaging_method)
deconv_common.fixed = fix.names.GEMDeCan(deconv_common)
source('~/Downloads/pseudobulk_function.R')
benchmarking_deconvolution(deconvolution = deconv_common.fixed, groundtruth = imaging_common, corr_type = corr_method, file_name = paste0("correlation_", Deconv_method, "_vs_", imaging_method, "_", corr_method), scatter = TRUE, imaging_type = imaging_method)
deconvolution = deconv_common.fixed
indices = grep(paste0(c("B.cells", "CD4.cells", "CD8.cells"),collapse = "|"), colnames(deconvolution))
deconv = deconvolution[,indices]
methods = unlist(strsplit(colnames(deconv), paste0(c("B.cells", "CD4.cells", "CD8.cells"), collapse = "|"))) #Extract methods-signatures containing B CD4 CD8
for (j in 1:length(methods)){
for (n in 1:length(methods)){
if (methods[j] == methods[n]) sum = data.frame("_BnT" = deconv[,j] + deconv[,n])
}
dplyr::rename(sum, "_BnT", paste0(methods[j],"BnT"))
deconv = sum
}
View(sum)
source('~/Downloads/pseudobulk_function.R')
benchmarking_deconvolution(deconvolution = deconv_common.fixed, groundtruth = imaging_common, corr_type = corr_method, file_name = paste0("correlation_", Deconv_method, "_vs_", imaging_method, "_", corr_method), scatter = TRUE, imaging_type = imaging_method)
deconvolution = deconv_common.fixed #a#a#
indices = grep(paste0(c("B.cells", "CD4.cells", "CD8.cells"),collapse = "|"), colnames(deconvolution))
deconv = deconvolution[,indices]
methods = unlist(strsplit(colnames(deconv), paste0(c("B.cells", "CD4.cells", "CD8.cells"), collapse = "|"))) #Extract methods-signatures containing B CD4 CD8
for (j in 1:length(methods)){
for (n in 1:length(methods)){
if (methods[j] == methods[n]) sum = data.frame("BnT" = deconv[,j] + deconv[,n])
}
dplyr::rename(sum, "BnT", paste0(methods[j],"_BnT"))
deconv = sum
}
View(sum)
# Step 1: Create a fake dataset
set.seed(123)  # For reproducibility
deconvolution <- data.frame(
"CellType1" = rnorm(5),
"Mast.activated.cells.Method1" = rnorm(5, mean = 10),
"Mast.resting.cells.Method1" = rnorm(5, mean = 5),
"Mast.activated.cells.Method2" = rnorm(5, mean = 15),
"Mast.resting.cells.Method2" = rnorm(5, mean = 3),
"CellType2" = rnorm(5)
)
# Step 2: Apply the code snippet
cell_clusters = c("Mast.cells")  # Simulating the cell_clusters vector with one element
for (i in 1:length(cell_clusters)) {
if(cell_clusters[i] == "Mast.cells") {
deconv = deconvolution[, grep(paste0(c(cell_clusters[i], "Mast.activated.cells", "Mast.resting.cells"), collapse = "|"), colnames(deconvolution))]
Mast.active = deconv[, grep("Mast.activated.cells", colnames(deconv))]
Mast.rest = deconv[, grep("Mast.resting.cells", colnames(deconv))]
Mast_cells = Mast.active + Mast.rest
methods_signatures = unlist(strsplit(colnames(Mast_cells), paste0(c("Mast.activated.cells", "Mast.resting.cells"), collapse = "|")))
colnames(Mast_cells) = paste0(methods_signatures, "Mast.cells")
deconv = deconv[,-which(colnames(deconv) %in% c(colnames(Mast.active), colnames(Mast.rest)))]
deconv = cbind(deconv, Mast_cells)
}
}
print(deconv)
View(deconv)
deconvolution = deconv_common.fixed #a#a#
indices = grep(paste0(c("B.cells", "CD4.cells", "CD8.cells"),collapse = "|"), colnames(deconvolution))
deconv = deconvolution[,indices]
methods = unlist(strsplit(colnames(deconv), paste0(c("B.cells", "CD4.cells", "CD8.cells"), collapse = "|"))) #Extract methods-signatures containing B CD4 CD8
for (j in 1:length(methods)){
for (n in 1:length(methods)){
if (methods[j] == methods[n]) sum = data.frame("BnT" = deconv[,j] + deconv[,n])
}
dplyr::rename(sum, "BnT", paste0(methods[j],"BnT"))
deconv = sum
}
#Consider specific cases (Mast cells including Mast activated and resting, NK including activated and resting and Macrophages including M1 and M2)
if(cell_clusters[i]=="Mast.cells"){
deconv = deconvolution[,grep(paste0(c(cell_clusters[i], "Mast.activated.cells", "Mast.resting.cells"), collapse = "|"), colnames(deconvolution))]
Mast.active = deconv[,grep("Mast.activated.cells", colnames(deconv))]
Mast.rest = deconv[,grep("Mast.resting.cells", colnames(deconv))]
Mast_cells = Mast.active + Mast.rest
methods_signatures = unlist(strsplit(colnames(Mast_cells), paste0(c("Mast.activated.cells", "Mast.resting.cells"), collapse = "|")))
colnames(Mast_cells) = paste0(methods_signatures, "Mast.cells")
deconv = deconv[,-which(colnames(deconv)%in%c(colnames(Mast.active), colnames(Mast.rest)))]
deconv = cbind(deconv, Mast_cells)
}else if(cell_clusters[i]=="NK.cells"){
deconv = deconvolution[,grep(paste0(c(cell_clusters[i], "NK.activated", "NK.resting"), collapse = "|"), colnames(deconvolution))]
NK.active = deconv[,grep("NK.activated", colnames(deconv))]
NK.rest = deconv[,grep("NK.resting", colnames(deconv))]
NK_cells = NK.active + NK.rest
methods_signatures = unlist(strsplit(colnames(NK_cells), paste0(c("NK.activated", "NK.resting"), collapse = "|")))
colnames(NK_cells) = paste0(methods_signatures, "NK.cells")
deconv = deconv[,-which(colnames(deconv)%in%c(colnames(NK.active), colnames(NK.rest)))]
deconv = cbind(deconv, NK_cells)
}else if(cell_clusters[i]=="Macrophages.cells"){
deconv = deconvolution[,grep(paste0(c(cell_clusters[i], "Macrophages.M0" ,"Macrophages.M1", "Macrophages.M2"), collapse = "|"), colnames(deconvolution))]
m0 = deconv[,grep("Macrophages.M0", colnames(deconv))]
m1 = deconv[,grep("Macrophages.M1", colnames(deconv))]
m2 = deconv[,grep("Macrophages.M2", colnames(deconv))]
m1_m2 = m1 + m2
methods_m0 = unlist(strsplit(colnames(m0), "Macrophages.M0")) #Extract methods-signatures containing M0
macrophages_m1_m2 = m1_m2[,-grep(paste0(methods_m0, collapse = "|"), colnames(m1_m2))] #Subset methods-signatures containing only M1 and M2
macrophages_m0_m1_m2 = m1_m2[,grep(paste0(methods_m0, collapse = "|"), colnames(m1_m2))] #Extract methods-signatures containing M0, M1, M2
m0_m1_m2 = macrophages_m0_m1_m2 + m0 #Methods with m0 + m1 + m2
macrophages_all = cbind(macrophages_m1_m2, m0_m1_m2)
methods_signatures = unlist(strsplit(colnames(macrophages_all), paste0(c("Macrophages.M0", "Macrophages.M1", "Macrophages.M2"), collapse = "|")))
colnames(macrophages_all) = paste0(methods_signatures, "Macrophages.cells")
deconv = deconv[,-which(colnames(deconv)%in%c(colnames(m0), colnames(m1), colnames(m2)))]
deconv = cbind(deconv, macrophages_all)
}else if(cell_clusters[i]%in%"Macrophages_no_defined_M1"){
deconv = deconvolution[,grep("Macrophages.M1", colnames(deconvolution))]
}else if(cell_clusters[i]%in%"Macrophages_no_defined_M2"){
deconv = deconvolution[,grep("Macrophages.M2", colnames(deconvolution))]
}else if(cell_clusters[i]%in%"Macrophages_no_defined_M0"){
deconv = deconvolution[,grep("Macrophages.M0", colnames(deconvolution))]
}else if(cell_clusters[i]%in%"Macrophages_no_defined_Monocytes"){
deconv = deconvolution[,grep("Monocytes", colnames(deconvolution))]
}else if(cell_clusters[i]%in%"Macrophages_M2_M1"){
deconv = deconvolution[,grep("Macrophages.M1", colnames(deconvolution))]
}else if(cell_clusters[i]%in%"Macrophages_M2_M2"){
deconv = deconvolution[,grep("Macrophages.M2", colnames(deconvolution))]
}else if(cell_clusters[i]%in%"Macrophages_M2_M0"){
deconv = deconvolution[,grep("Macrophages.M0", colnames(deconvolution))]
}else if(cell_clusters[i]%in%"Macrophages_M2_Monocytes"){
deconv = deconvolution[,grep("Monocytes", colnames(deconvolution))]
}else if(cell_clusters[i]%in%"BnT"){
deconvolution = deconv_common.fixed #a#a#
B_cell = deconv[,grep("B.cells", colnames(deconv))]
T_cell = deconv[,grep("T.cells", colnames(deconv))]
indices = grep(paste0(c("B.cells", "CD4.cells", "CD8.cells"),collapse = "|"), colnames(deconvolution))
deconv = deconvolution[,indices]
methods = unlist(strsplit(colnames(deconv), paste0(c("B.cells", "CD4.cells", "CD8.cells"), collapse = "|"))) #Extract methods-signatures containing B CD4 CD8
for (j in 1:length(methods)){
if (methods[i] == methods[j]) sum = data.frame("BnT" = deconv[,j] + deconv[,n])
}
dplyr::rename(sum, "BnT", paste0(methods[j],"BnT"))
deconv = deconv[,-which(colnames(deconv)%in%c(colnames(B_cell), colnames(T_cell)))]
deconv = cbind(deconv, sum)
}else{
idx = grep(cell_clusters[i], colnames(deconvolution))
if(length(idx)==0){
cells_discard = c(cells_discard, cell_clusters[i])
print(cells_discard) #a#a#
}
deconv = deconvolution[,idx]
}
View(deconv)
deconvolution = deconv_common.fixed #a#a#
View(deconv)
deconv = read.delim("/home/francesco.massaini/Desktop/IMMUCAN_data/NSCLC2/03_Deconvolution/Whitout_CD226_and_without_patient3/all_deconvolutions_NSCLC2_TPM_withoutCD226_withoutPatient3.txt", header = 1, row.names = 1)
rownames(deconv) <- str_remove_all(string = rownames(deconv), pattern = "-RNA-01|-RNA-02|-RNA-04|-FIXT-01")
common_patients <- intersect(rownames(deconv), rownames(imaging))
# Subset the data for common patients
imaging_common <- imaging[common_patients,]
deconv_common <- deconv[common_patients, ]
deconv_common.fixed = fix.names.GEMDeCan(deconv_common)
deconvolution = deconv_common.fixed #a#a#
View(deconv_common.fixed)
B_cell = deconv[,grep("B.cells", colnames(deconv))]
T_cell = deconv[,grep("T.cells", colnames(deconv))]
View(B_cell)
View(T_cell)
indices = grep(paste0(c("B.cells", "CD4.cells", "CD8.cells"),collapse = "|"), colnames(deconvolution))
deconv = deconvolution[,indices]
methods = unlist(strsplit(colnames(deconv), paste0(c("B.cells", "CD4.cells", "CD8.cells"), collapse = "|"))) #Extract methods-signatures containing B CD4 CD8
View(deconv)
T_cell = deconv[,grep(paste0("CD4.cells", collapse = |), colnames(deconv))]
View(T_cell)
B_cell = deconv[,grep("B.cells", colnames(deconv))]
T_cell = deconv[,grep(paste0("CD4.cells", "CD8.cells", collapse = |), colnames(deconv))]
deconvolution = deconv_common.fixed #a#a#
B_cell = deconv[,grep("B.cells", colnames(deconv))]
T_cell = deconv[,grep(paste0("CD4.cells", "CD8.cells", collapse = |), colnames(deconv))]
deconvolution = deconv_common.fixed #a#a#
B_cell = deconv[,grep("B.cells", colnames(deconv))]
T_cell = deconv[,grep(paste0("CD4.cells", "CD8.cells", collapse = "|"), colnames(deconv))]
indices = grep(paste0(c("B.cells", "CD4.cells", "CD8.cells"),collapse = "|"), colnames(deconvolution))
deconv = deconvolution[,indices]
deconvolution = deconv_common.fixed #a#a#
B_cell = deconv[,grep("B.cells", colnames(deconvolution))]
T_cell = deconv[,grep(paste0("CD4.cells", "CD8.cells", collapse = "|"), colnames(deconvoltion))]
T_cell = deconv[,grep(paste0("CD4.cells", "CD8.cells", collapse = "|"), colnames(deconvoltion))]
B_cell = deconv[,grep("B.cells", colnames(deconvolution))]
T_cell = deconv[,grep(paste0("CD4.cells", "CD8.cells", collapse = "|"), colnames(deconvolution))]
deconvolution = deconv_common.fixed #a#a#
B_cell = deconv[,grep("B.cells", colnames(deconvolution))]
T_cell = deconv[,grep(paste0("CD4.cells", "CD8.cells", collapse = "|"), colnames(deconvolution))]
deconvolution = deconv_common.fixed #a#a#
B_cell = deconv[,grep("B.cells", colnames(deconvolution))]
T_cell = deconv[,grep(paste0(c("CD4.cells", "CD8.cells"), collapse = "|"), colnames(deconvolution))]
grep(paste0(c("CD4.cells", "CD8.cells"), collapse = "|"), colnames(deconvolution))
deconvolution = deconv_common.fixed #a#a#
deconv = deconvolution[,grep(paste0(c("B.cells", "CD4.cells", "CD8.cells"), collapse = "|"), colnames(deconvolution))]
View(deconv)
deconvolution = deconv_common.fixed #a#a#
View(deconvolution)
grep("CD8.cells", colnames(deconvolution))
methods = unlist(strsplit(colnames(deconv), paste0(c("B.cells", "CD4.cells", "CD8.cells"), collapse = "|"))) #Extract methods-signatures containing B CD4 CD8
sum = data.frame("BnT")
View(sum)
sum = data.frame("BnT" = "")
for (j in 1:length(methods)){
grep(methods[j], methods)
# sum = cbind(sum, "BnT" = deconv[,z])
# for (j in 1:length(methods)){
#   if (methods[z] == methods[j]) {
#     sum = sum + deconv[,j]
#     }
# }
# dplyr::rename(sum, "BnT", paste0(methods[j],"BnT"))
}
for (j in 1:length(methods)){
grep(methods[j], methods)
# sum = cbind(sum, "BnT" = deconv[,z])
# for (j in 1:length(methods)){
#   if (methods[z] == methods[j]) {
#     sum = sum + deconv[,j]
#     }
# }
# dplyr::rename(sum, "BnT", paste0(methods[j],"BnT"))
}
methods = unlist(strsplit(colnames(deconv), paste0(c("B.cells", "CD4.cells", "CD8.cells"), collapse = "|"))) #Extract methods-signatures containing B CD4 CD8
sum = data.frame("BnT" = "")
for (j in 1:length(methods)){
grep(methods[j], methods)
# sum = cbind(sum, "BnT" = deconv[,z])
# for (j in 1:length(methods)){
#   if (methods[z] == methods[j]) {
#     sum = sum + deconv[,j]
#     }
# }
# dplyr::rename(sum, "BnT", paste0(methods[j],"BnT"))
}
for (j in 1:length(methods)){
a = grep(methods[j], methods)
# sum = cbind(sum, "BnT" = deconv[,z])
# for (j in 1:length(methods)){
#   if (methods[z] == methods[j]) {
#     sum = sum + deconv[,j]
#     }
# }
# dplyr::rename(sum, "BnT", paste0(methods[j],"BnT"))
}
View(methods)
methods
a = grep(methods[1], methods)
a[1]
a[2]
for (z in 1:length(rip)){
sum = sum + deconv[, a[z]]
}
rip = grep(methods[1], methods)
for (z in 1:length(rip)){
sum = sum + deconv[, a[z]]
}
rip = grep(methods[1], methods)
for (z in 1:length(rip)){
sum = sum + deconv[, rip[z]]
}
rip[z]
1:length(rip)
str(rip)
length(rip)
for (z in 1:num(rip)){
sum = sum + deconv[, rip[z]]
}
for (z in 1:lenght(rip)){
sum = sum + deconv[, rip[z]]
}
for (z in 1:length(rip)){
sum = sum + deconv[, rip[z]]
}
for (z in 1:length(rip)) {
sum <- sum + deconv[, rip[z]]
}
sum = data.frame("BnT" = deconv[, methods[1]])
sum = deconv[, methods[1]])
sum = deconv[, methods[1]]
methods = unlist(strsplit(colnames(deconv), paste0(c("B.cells", "CD4.cells", "CD8.cells"), collapse = "|"))) #Extract methods-signatures containing B CD4 CD8
methods[1]
sum = data.frame("BnT" = deconv[, 1])
View(sum)
rip = grep(methods[1], methods)
for (z in 1:length(rip)) {
sum <- sum + deconv[, rip[z]]
}
View(sum)
sum = data.frame("BnT" = deconv[, 1])
rip = grep(methods[1], methods)
for (z in 1:length(rip)) {
sum <- sum + deconv[, rip[z]]
}
View(sum)
deconv[, rip[z]]
sum = data.frame("BnT" = deconv[, 1])
deconv[, 1]
sum = data.frame("BnT" = deconv[, 1])
